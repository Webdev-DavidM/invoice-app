{"version":3,"sources":["components/EditOrCreateInvoice.module.scss","components/Invoice.module.scss","components/NavBar.js","helpers/formatDate.js","components/invoiceHelpers/generateCreatedAt.js","components/InvoiceDetails.js","components/Invoice.js","components/Invoices.js","components/invoiceHelpers/validateItems.js","components/invoiceHelpers/calculateTotal.js","components/invoiceHelpers/validationSchema.js","components/EditInvoice.js","components/CreateInvoice.js","components/InvoiceHeader.js","components/invoiceHelpers/generateNewInvoiceID.js","components/invoiceHelpers/newInvoiceDefaultValues.js","components/DeleteModal.js","App.js","index.js","components/InvoiceHeader.module.scss","components/NavBar.module.scss","components/InvoiceDetails.module.scss"],"names":["module","exports","NavBar","className","styles","navbar_flex_container","logo_container","src","process","alt","nested_purple_pattern","avatar_container","formatDateUK","date","formatDate","split","1","2","3","4","5","6","7","8","9","10","11","12","parseInt","DateTime","require","generateCreatedAt","now","c","year","month","day","InvoiceDetails","useContext","InvoiceContext","goBackDetails","selectedInvoice","markAsPaid","editInvoice","showDeleteModal","status","id","clientEmail","clientName","clientAddress","senderAddress","paymentDue","createdAt","items","total","description","button_style","paid_btn","draft_btn","pending_btn","invoice_details_container","go_back_section","onClick","status_and_button","circle_container","query","render","edit_button","delete_button","paid_button","main_info_flex_container","id_container","body_2","address","street","city","postCode","country","payment_dates","invoice","payment","invoice_address","email","sub_total_and_total_container","titles_container","item","qty","price","map","index","invoice_item","invoice_name","name","invoice_quantity","quantity","toFixed","invoice_unit_price","invoice_price","grand_total","fixed_buttons","Invoice","chosenInvoice","showInvoices","CSSTransition","in","timeout","mountOnEnter","classNames","unmountOnExit","invoice_flex_container_and_btn","due_date","Invoices","filter","invoices","filteredInvoices","invoicesToDisplay","validateItems","values","length","calculateTotal","reduce","validationSchema","yup","shape","min","required","EditInvoice","useState","paymentTermsState","setPaymentTermsState","React","itemError","setItemError","itemDetailsError","setItemDetailsError","open","setOpen","invoiceToUpdate","cancel","goBackEditOrCreate","paymentTerms","formik","useFormik","initialValues","enableReinitialize","onSubmit","console","log","isNaN","valuesWithPaymentTermFromState","invoice_edit_create_container","value","style","display","flexWrap","handleSubmit","color","width","edit_hash","Grid","container","spacing","xs","p","heading","TextField","fullWidth","variant","onChange","handleChange","error","getIn","touched","Boolean","errors","helperText","md","type","defaultValue","Select","onClose","displayEmpty","onOpen","e","target","paymentTerm","MenuItem","paddingBottom","selected","arrayHelpers","m","margin","border","disabled","delete_btn","alignItems","justifyContent","marginTop","paddingRight","remove","add_new_item_btn","push","item_error","marginLeft","cancel_btn","resetForm","save_changes_btn","NewInvoice","newInvoice","addNewInvoiceToState","useEffect","InvoiceHeader","setFilterInvoices","displayNewInvoice","showDropDown","setToggleDropDown","invoice_header_container","no_of_invoices_container","filter_container","prevToggleState","drop_down_container","new_invoice_btn","button_circle","generateNewInvoiceID","newId","alphabet","letter","toUpperCase","numbers","i","Math","floor","random","newInvoiceDefaultValues","DeleteModal","setDeleteModal","deleteInvoice","createContext","App","setInvoices","setNewInvoice","showNewInvoice","setShowNewinvoice","deleteModal","setSelectedInvoice","backgroundGreyedOut","setBackgroundGreyedOut","showEditInvoice","setShowEditInvoice","showInvoiceDetails","setShowInvoiceDetails","setShowInvoices","invoicesData","Provider","setTimeout","defaultValues","updatedSelectedInvoice","updatedInvoices","concat","window","scrollTo","updatedInvoice","prevInvoices","newInvoices","goBack","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2da985d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"EditOrCreateInvoice_body_1__1UFbD\",\"body_2\":\"EditOrCreateInvoice_body_2__2rQev\",\"App\":\"EditOrCreateInvoice_App__15w4U\",\"greyed_out_background\":\"EditOrCreateInvoice_greyed_out_background__16-SC\",\"main-invoice-container\":\"EditOrCreateInvoice_main-invoice-container__3Mzl0\",\"no-invoice-image\":\"EditOrCreateInvoice_no-invoice-image__2SZMV\",\"delete_modal_flex_container\":\"EditOrCreateInvoice_delete_modal_flex_container__3hy2Y\",\"modal_container\":\"EditOrCreateInvoice_modal_container__38mZ-\",\"button_container\":\"EditOrCreateInvoice_button_container__3Onp1\",\"cancel_btn\":\"EditOrCreateInvoice_cancel_btn__nBk_6\",\"delete_btn\":\"EditOrCreateInvoice_delete_btn__2x-RJ\",\"alert-enter\":\"EditOrCreateInvoice_alert-enter__1FmvG\",\"alert-enter-active\":\"EditOrCreateInvoice_alert-enter-active__1MSIA\",\"alert-exit\":\"EditOrCreateInvoice_alert-exit__17Q_y\",\"alert-exit-active\":\"EditOrCreateInvoice_alert-exit-active__1Bjku\",\"invoices-move-enter\":\"EditOrCreateInvoice_invoices-move-enter__2A2tf\",\"invoices-move-enter-active\":\"EditOrCreateInvoice_invoices-move-enter-active__1tDY5\",\"invoices-move-exit\":\"EditOrCreateInvoice_invoices-move-exit__35hj5\",\"invoices-move-exit-active\":\"EditOrCreateInvoice_invoices-move-exit-active__3G_fG\",\"invoicesDetails-move-enter\":\"EditOrCreateInvoice_invoicesDetails-move-enter__20V8_\",\"invoicesDetails-move-enter-active\":\"EditOrCreateInvoice_invoicesDetails-move-enter-active__37tow\",\"invoicesDetails-move-exit\":\"EditOrCreateInvoice_invoicesDetails-move-exit__1tW1T\",\"invoicesDetails-move-exit-active\":\"EditOrCreateInvoice_invoicesDetails-move-exit-active__rrfsm\",\"invoice_edit_create_container\":\"EditOrCreateInvoice_invoice_edit_create_container__1Q9dt\",\"heading\":\"EditOrCreateInvoice_heading__2sCqj\",\"edit_hash\":\"EditOrCreateInvoice_edit_hash__259Lc\",\"total\":\"EditOrCreateInvoice_total__2WBo4\",\"save_changes_btn\":\"EditOrCreateInvoice_save_changes_btn__39eaF\",\"add_new_item_btn\":\"EditOrCreateInvoice_add_new_item_btn__3a3Jd\",\"item_error\":\"EditOrCreateInvoice_item_error__1jE9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"Invoice_body_1__1fmlm\",\"body_2\":\"Invoice_body_2__E26cS\",\"App\":\"Invoice_App__1jQSX\",\"greyed_out_background\":\"Invoice_greyed_out_background__3nj0P\",\"main-invoice-container\":\"Invoice_main-invoice-container__33VUf\",\"no-invoice-image\":\"Invoice_no-invoice-image__2C6kW\",\"delete_modal_flex_container\":\"Invoice_delete_modal_flex_container__2GOGT\",\"modal_container\":\"Invoice_modal_container__2YTPO\",\"button_container\":\"Invoice_button_container__3vmdQ\",\"cancel_btn\":\"Invoice_cancel_btn__14dzw\",\"delete_btn\":\"Invoice_delete_btn__3VFnj\",\"alert-enter\":\"Invoice_alert-enter__2Z_Hg\",\"alert-enter-active\":\"Invoice_alert-enter-active__3XMFr\",\"alert-exit\":\"Invoice_alert-exit__3T2GP\",\"alert-exit-active\":\"Invoice_alert-exit-active__1S2Zb\",\"invoices-move-enter\":\"Invoice_invoices-move-enter__yS8ff\",\"invoices-move-enter-active\":\"Invoice_invoices-move-enter-active__2r-Hm\",\"invoices-move-exit\":\"Invoice_invoices-move-exit__1xXQs\",\"invoices-move-exit-active\":\"Invoice_invoices-move-exit-active__2mVnF\",\"invoicesDetails-move-enter\":\"Invoice_invoicesDetails-move-enter__3Aw1v\",\"invoicesDetails-move-enter-active\":\"Invoice_invoicesDetails-move-enter-active__2myDm\",\"invoicesDetails-move-exit\":\"Invoice_invoicesDetails-move-exit__27ecN\",\"invoicesDetails-move-exit-active\":\"Invoice_invoicesDetails-move-exit-active__2p-Nd\",\"invoice_flex_container_and_btn\":\"Invoice_invoice_flex_container_and_btn__3hqZe\",\"id_container\":\"Invoice_id_container__3ghQS\",\"due_date\":\"Invoice_due_date__3RMUG\",\"price\":\"Invoice_price__1Pawn\",\"name\":\"Invoice_name__1e3a_\",\"pending_btn\":\"Invoice_pending_btn__3DS-c\",\"circle_container\":\"Invoice_circle_container__2fcoJ\",\"paid_btn\":\"Invoice_paid_btn__FDHgH\",\"draft_btn\":\"Invoice_draft_btn__31z9w\",\"total\":\"Invoice_total__2RV4l\",\"status_pending\":\"Invoice_status_pending__X4NV9\"};","import React from 'react';\nimport styles from './NavBar.module.scss';\n\nexport default function NavBar() {\n  return (\n    <div className={styles.navbar_flex_container}>\n      <div className={styles.logo_container}>\n        <img src={`${process.env.PUBLIC_URL}/assets/logo.svg`} alt='' />\n        <div className={styles.nested_purple_pattern}></div>\n      </div>\n      <div className={styles.avatar_container}>\n        <img src={`${process.env.PUBLIC_URL}/assets/image-avatar.jpg`} alt='' />\n      </div>\n    </div>\n  );\n}\n","export const formatDateUK = (date) => {\n  const monthNumberToLabelMap = {\n    1: 'January',\n    2: 'February',\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'August',\n    9: 'September',\n    10: 'October',\n    11: 'November',\n    12: 'December',\n  };\n  let formatDate = date.split('-');\n\n  return `${formatDate[2]} ${monthNumberToLabelMap[parseInt(formatDate[1])]} ${\n    formatDate[0]\n  }`;\n};\n","import { formatDateUK } from \"../../helpers/formatDate\";\nconst { DateTime } = require(\"luxon\");\n\nconst generateCreatedAt = () => {\n  let time = DateTime.now();\n  const { year, month, day } = time.c;\n  return formatDateUK(`${year}-${month}-${day}`);\n};\n\nexport default generateCreatedAt;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { InvoiceContext } from \"../App\";\nimport Media from \"react-media\";\nimport styles from \"./InvoiceDetails.module.scss\";\nimport formatDate from \"./invoiceHelpers/formatDate\";\nimport generateCreatedAt from \"./invoiceHelpers/generateCreatedAt\";\n\nexport default function InvoiceDetails() {\n  const {\n    goBackDetails,\n    selectedInvoice,\n    markAsPaid,\n    editInvoice,\n    showDeleteModal,\n  } = useContext(InvoiceContext);\n  const {\n    status,\n    id,\n    clientEmail,\n    clientName,\n    clientAddress,\n    senderAddress,\n    paymentDue,\n    createdAt,\n    items,\n    total,\n    description,\n  } = selectedInvoice[0];\n\n  const button_style =\n    status === \"paid\"\n      ? styles.paid_btn\n      : status === \"draft\"\n      ? styles.draft_btn\n      : styles.pending_btn;\n\n  return (\n    <>\n      <div className={styles.invoice_details_container}>\n        <h2 className={styles.go_back_section}>\n          <button onClick={() => goBackDetails()}>\n            {\" \"}\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/icon-arrow-left.svg`}\n              alt=\"go back\"\n            />\n            &nbsp; &nbsp; &nbsp;\n            <h4>Go back</h4>{\" \"}\n          </button>\n        </h2>\n\n        <div className={styles.status_and_button}>\n          <h4>status</h4>\n          <div className={button_style}>\n            <div className={styles.circle_container}></div>\n            {status}\n          </div>\n          <Media\n            query=\"(min-width: 768px)\"\n            render={() => {\n              return (\n                <>\n                  <button\n                    onClick={() => editInvoice()}\n                    className={styles.edit_button}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => showDeleteModal(id)}\n                    className={styles.delete_button}\n                  >\n                    Delete\n                  </button>\n                  <button\n                    onClick={() => markAsPaid(id)}\n                    className={styles.paid_button}\n                  >\n                    Mark as paid\n                  </button>\n                </>\n              );\n            }}\n          />\n        </div>\n        <div className={styles.main_info_flex_container}>\n          <h4 className={styles.id_container}>\n            <span>#</span> {id}\n            <Media\n              query=\"(min-width: 768px)\"\n              render={() => {\n                return (\n                  <div className={(styles.body_2, styles.description)}>\n                    {description}\n                  </div>\n                );\n              }}\n            />\n          </h4>\n          <div className={styles.address}>\n            <div className={styles.body_2}>{senderAddress.street}</div>\n            <div className={styles.body_2}>{senderAddress.city}</div>\n            <div className={styles.body_2}>{senderAddress.postCode}</div>\n            <div className={styles.body_2}>{senderAddress.country}</div>\n          </div>\n          <div className={styles.payment_dates}>\n            <div className={(styles.body_2, styles.invoice)}>Invoice Date</div>\n            <h4>{createdAt}</h4>\n            <div className={(styles.body_2, styles.payment)}>Payment Date</div>\n            <h4>{paymentDue}</h4>\n          </div>\n          <div className={styles.invoice_address}>\n            <div className={styles.body_2}>Bill To</div>\n            <h4>{clientName}</h4>\n            <div className={styles.body_2}>{clientAddress.street}</div>\n            <div className={styles.body_2}>{clientAddress.city}</div>\n            <div className={styles.body_2}>{clientAddress.postCode}</div>\n            <div className={styles.body_2}>{clientAddress.country}</div>\n            <div className={styles.body_2}></div>\n          </div>\n          <div className={styles.email}>\n            <div className={styles.body_2}>Sent to:</div>\n            <h4>{clientEmail}</h4>\n          </div>\n\n          <div className={styles.sub_total_and_total_container}>\n            <Media\n              query=\"(min-width: 768px)\"\n              render={() => {\n                return (\n                  <div className={styles.titles_container}>\n                    <div className={(styles.body_2, styles.item)}>\n                      Item Name\n                    </div>\n                    <div className={(styles.body_2, styles.qty)}>QTY</div>\n                    <div className={(styles.body_2, styles.price)}>Price</div>\n                    <div className={(styles.body_2, styles.total)}>Total</div>\n                  </div>\n                );\n              }}\n            />\n            {items.map((item, index) => (\n              <div key={index} className={styles.invoice_item}>\n                <h4 className={styles.invoice_name}>{item.name}</h4>\n                <h4 className={styles.invoice_quantity}>\n                  {item.quantity}\n                  <Media\n                    query=\"(max-width: 768px)\"\n                    render={() => {\n                      return <> x £{parseInt(item.price).toFixed(2) | 0}</>;\n                    }}\n                  />\n                </h4>\n                <Media\n                  query=\"(min-width: 768px)\"\n                  render={() => {\n                    return (\n                      <h4 className={styles.invoice_unit_price}>\n                        £ {parseInt(item.price).toFixed(2) | 0}\n                      </h4>\n                    );\n                  }}\n                />\n                <h4 className={styles.invoice_price}>\n                  £&nbsp;{parseInt(item.price * item.quantity).toFixed(2) | 0}\n                </h4>\n              </div>\n            ))}\n          </div>\n          <div className={styles.grand_total}>\n            <div className={styles.body_2}>Grand Total</div>\n            <h2>£&nbsp; {parseInt(total).toFixed(2) | 0}</h2>\n          </div>\n        </div>\n      </div>\n      <Media\n        query=\"(max-width: 768px)\"\n        render={() => {\n          return (\n            <div className={styles.fixed_buttons}>\n              <button\n                onClick={() => editInvoice()}\n                className={styles.edit_button}\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => showDeleteModal(id)}\n                className={styles.delete_button}\n              >\n                Delete\n              </button>\n              <button\n                onClick={() => markAsPaid(id)}\n                className={styles.paid_button}\n              >\n                Mark as paid\n              </button>\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport Media from 'react-media';\nimport { InvoiceContext } from '../App';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Invoice.module.scss';\n\nexport default function Invoice({ invoice }) {\n  const { id, clientName, total, status } = invoice;\n  const { chosenInvoice, showInvoices } = useContext(InvoiceContext);\n\n  const button_style =\n    invoice.status === 'paid'\n      ? styles.paid_btn\n      : status === 'draft'\n      ? styles.draft_btn\n      : styles.pending_btn;\n\n  return (\n    <>\n      <CSSTransition\n        in={showInvoices}\n        timeout={500}\n        mountOnEnter\n        classNames='invoices-move'\n        unmountOnExit>\n        <div\n          onClick={() => chosenInvoice(id, false)}\n          className={styles.invoice_flex_container_and_btn}>\n          <h4 className={styles.id_container}>\n            <span>#</span> {id}\n          </h4>\n          <div className={(styles.due_date, styles.body_2)}>\n            {/* {formattedDate} */}\n          </div>\n\n          <h4 className={styles.total}>£{total}</h4>\n          <div className={(styles.body_2, styles.name)}>{clientName}</div>\n          <div className={button_style}>\n            <div className={styles.circle_container}></div>\n            {status}\n          </div>\n          <Media\n            query='(min-width: 768px)'\n            render={() => (\n              <button>\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/icon-arrow-right.svg`}\n                  alt=''\n                />\n              </button>\n            )}\n          />\n        </div>\n      </CSSTransition>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { InvoiceContext } from '../App';\nimport Invoice from './Invoice';\n\nexport default function Invoices({ filter }) {\n  const { invoices } = useContext(InvoiceContext);\n\n  let invoicesToDisplay = () => {\n    let filteredInvoices = invoices;\n    switch (filter) {\n      case 'draft':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'draft'\n        );\n        break;\n      case 'pending':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'pending'\n        );\n        break;\n      case 'paid':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'paid'\n        );\n        break;\n      case 'none':\n        filteredInvoices = invoices;\n        break;\n      default:\n        filteredInvoices = invoices;\n        break;\n    }\n    return filteredInvoices.map((invoice, index) => (\n      <Invoice invoice={invoice} key={index} />\n    ));\n  };\n\n  return <>{invoicesToDisplay()}</>;\n}\n","// This helper function makes sure the user has selected at least one item.\n\nconst validateItems = (values) => {\n  if (values.items.length > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default validateItems;\n","const calculateTotal = (values) => {\n  let total =\n    values.items.length > 1\n      ? values.items.reduce((total, item) => {\n          let subtotal = parseInt(item.price) * item.quantity;\n          return total + subtotal;\n        }, 0)\n      : parseInt(values.items[0].price) * values.items[0].quantity;\n  return total;\n};\n\nexport default calculateTotal;\n","import * as yup from \"yup\";\n\nexport const validationSchema = () =>\n  yup.object().shape({\n    senderAddress: yup.object().shape({\n      street: yup\n        .string()\n        .min(3)\n        .required(\"Please enter an address, minimum 3 characters\"),\n      city: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a city, minimum 3 characters\"),\n      postCode: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a postCode, minimum 3 characters\"),\n      country: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a country, minimum 3 characters\"),\n    }),\n    clientAddress: yup.object().shape({\n      street: yup\n        .string()\n        .min(3)\n        .required(\"Please enter an address, minimum 3 characters\"),\n      city: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a city, minimum 3 characters\"),\n      postCode: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a postCode, minimum 3 characters\"),\n      country: yup\n        .string()\n        .min(3)\n        .required(\"Please enter a country, minimum 3 characters\"),\n    }),\n    paymentDue: yup\n      .string()\n      .min(3)\n      .required(\"Please select a invoice due date\"),\n    description: yup.string().min(3).required(\"Please enter a description\"),\n    clientName: yup.string().min(3).required(\"Please enter a client name\"),\n    clientEmail: yup.string().min(3).required(\"Please enter a client email\"),\n  });\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getIn, useFormik, FormikProvider, FieldArray, Form } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { InvoiceContext } from \"../App\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport validateItems from \"./invoiceHelpers/validateItems\";\nimport calculateTotal from \"./invoiceHelpers/calculateTotal\";\nimport styles from \"./EditOrCreateInvoice.module.scss\";\nimport { validationSchema } from \"././invoiceHelpers/validationSchema\";\n\nexport default function EditInvoice() {\n  const [paymentTermsState, setPaymentTermsState] = useState(30);\n\n  const [itemError, setItemError] = React.useState(null);\n  const [itemDetailsError, setItemDetailsError] = React.useState(null);\n\n  const [open, setOpen] = React.useState(false);\n\n  let { selectedInvoice, invoiceToUpdate, cancel, goBackEditOrCreate } =\n    useContext(InvoiceContext);\n\n  const {\n    id,\n    createdAt,\n    paymentDue,\n    description,\n    paymentTerms,\n    clientName,\n    clientEmail,\n    senderAddress: { street, city, postCode, country },\n    clientAddress,\n    status,\n    items,\n    total,\n  } = selectedInvoice[0];\n\n  const formik = useFormik({\n    // I can use the initial value beow to prefill the form if i am editing it.\n    initialValues: {\n      id,\n      createdAt,\n      paymentDue,\n      description,\n      paymentTerms,\n      clientName,\n      clientEmail,\n      status,\n      senderAddress: {\n        street: street,\n        city: city,\n        postCode: postCode,\n        country: country,\n      },\n      clientAddress: {\n        street: clientAddress.street,\n        city: clientAddress.city,\n        postCode: clientAddress.postCode,\n        country: clientAddress.country,\n      },\n      items,\n      total,\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema(),\n\n    onSubmit: (values) => {\n      // we need to iterate through the items and create a total and pass this to total\n\n      if (validateItems(values)) {\n        console.log(values);\n        setItemError(null);\n        let total = calculateTotal(values);\n        if (isNaN(total) | (total === 0)) {\n          return setItemDetailsError(true);\n        } else {\n          const valuesWithPaymentTermFromState = {\n            ...values,\n            total: total,\n            paymentTerms: paymentTermsState,\n          };\n          invoiceToUpdate(valuesWithPaymentTermFromState);\n        }\n      } else {\n        setItemError(true);\n      }\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const resetForm = () => {\n    formik.resetForm();\n    cancel();\n  };\n\n  return (\n    <div className={styles.invoice_edit_create_container}>\n      {/* The formikProvider component takes in my react useFormik hook and gives all the values and methods to the components  */}\n      <FormikProvider value={formik}>\n        <Form\n          style={{ display: \"flex\", flexWrap: \"wrap\" }}\n          onSubmit={formik.handleSubmit}\n          // fullWidth\n        >\n          <button\n            onClick={() => goBackEditOrCreate()}\n            style={{ display: \"flex\", color: \"black\", width: \"100%\" }}\n          >\n            {\" \"}\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/icon-arrow-left.svg`}\n              alt=\"go back\"\n            />\n            &nbsp; &nbsp; &nbsp;\n            <h4 style={{ color: \"black\" }}>Go back</h4>{\" \"}\n          </button>\n          <h2>\n            Edit <span className={styles.edit_hash}>#</span>\n            {id}\n          </h2>\n          <Grid container spacing={3}>\n            <Grid item xs={12} p>\n              <h4 className={styles.heading}>Bill From</h4>\n              <h4>Street</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.street\"\n                name=\"senderAddress.street\"\n                value={formik.values.senderAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.street\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.street\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.street\") &&\n                  getIn(formik.errors, \"senderAddress.street\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.city\"\n                name=\"senderAddress.city\"\n                value={formik.values.senderAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.city\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.city\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.city\") &&\n                  getIn(formik.errors, \"senderAddress.city\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.postCode\"\n                name=\"senderAddress.postCode\"\n                value={formik.values.senderAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.postCode\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.postCode\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.postCode\") &&\n                  getIn(formik.errors, \"senderAddress.postCode\")\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.country\"\n                name=\"senderAddress.country\"\n                value={formik.values.senderAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.country\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.country\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.country\") &&\n                  getIn(formik.errors, \"senderAddress.country\")\n                }\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <h4 className={styles.heading}>Bill To</h4>\n              <h4>Client Name</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientName\"\n                name=\"clientName\"\n                value={formik.values.clientName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientName && Boolean(formik.errors.clientName)\n                }\n                helperText={\n                  formik.touched.clientName && formik.errors.clientName\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client E-mail</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientEmail\"\n                name=\"clientEmail\"\n                value={formik.values.clientEmail}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientEmail &&\n                  Boolean(formik.errors.clientEmail)\n                }\n                helperText={\n                  formik.touched.clientEmail && formik.errors.clientEmail\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client Address</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.street\"\n                name=\"clientAddress.street\"\n                value={formik.values.clientAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.street\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.street\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.street\") &&\n                  getIn(formik.errors, \"clientAddress.street\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.city\"\n                name=\"clientAddress.city\"\n                value={formik.values.clientAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.city\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.city\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.city\") &&\n                  getIn(formik.errors, \"clientAddress.city\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.postCode\"\n                name=\"clientAddress.postCode\"\n                value={formik.values.clientAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.postCode\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.postCode\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.postCode\") &&\n                  getIn(formik.errors, \"clientAddress.postCode\")\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.country\"\n                name=\"clientAddress.country\"\n                value={formik.values.clientAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientAddress &&\n                  Boolean(formik.errors.clientAddress)\n                }\n                helperText={\n                  formik.touched.clientAddress && formik.errors.clientAddress\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Invoice Due</h4>\n              <TextField\n                fullWidth\n                type=\"date\"\n                variant=\"outlined\"\n                id=\"paymentDue\"\n                name=\"paymentDue\"\n                defaultValue={paymentDue}\n                value={formik.values.paymentDue}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.paymentDue && Boolean(formik.errors.paymentDue)\n                }\n                helperText={\n                  formik.touched.paymentDue && formik.errors.paymentDue\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Payment terms</h4>\n              <Select\n                fullWidth\n                id=\"demo-controlled-open-select\"\n                open={open}\n                variant=\"outlined\"\n                onClose={handleClose}\n                displayEmpty\n                onOpen={handleOpen}\n                value={paymentTermsState}\n                onChange={(e) => setPaymentTermsState(e.target.value)}\n              >\n                {[1, 7, 14, 30].map((paymentTerm, index) => {\n                  if (paymentTerm !== paymentTerms) {\n                    return (\n                      <MenuItem value={paymentTerm} key={index}>\n                        <h4 style={{ color: \"black\", paddingBottom: \"0\" }}>\n                          Net {paymentTerm}\n                          {paymentTerm === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  } else {\n                    return (\n                      <MenuItem selected={true} key={index}>\n                        {\" \"}\n                        <h4 style={{ color: \"black\", paddingBottom: \"0\" }}>\n                          Net {paymentTerms}\n                          {paymentTerms === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  }\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Project description</h4>\n              <TextField\n                fullWidth\n                type=\"description\"\n                variant=\"outlined\"\n                id=\"description\"\n                name=\"description\"\n                defaultValue={description}\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n            </Grid>\n\n            <Grid\n              item\n              // container\n\n              xs={12}\n            >\n              <h3>Item List</h3>\n            </Grid>\n\n            {/* <Form> */}\n            <FieldArray\n              name=\"items\"\n              render={(arrayHelpers) => (\n                <>\n                  <Grid container>\n                    {formik.values.items &&\n                      formik.values.items.length > 0 &&\n                      formik.values.items.map((item, index) => (\n                        <Grid\n                          container\n                          key={index}\n                          spacing={3}\n                          m={2}\n                          style={{ margin: \"1rem 0\" }}\n                        >\n                          <Grid item xs={6} md={3}>\n                            <h4>Item Name</h4>\n                            <TextField\n                              fullWidth\n                              variant=\"outlined\"\n                              id={`items.${index}.name`}\n                              name={`items.${index}.name`}\n                              value={formik.values.items[index].name}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Qty</h4>\n                            <TextField\n                              variant=\"outlined\"\n                              fullWidth\n                              id={`items.${index}`.quantity}\n                              name={`items[${index}].quantity`}\n                              value={formik.values.items[index].quantity}\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Price</h4>\n                            <TextField\n                              variant=\"outlined\"\n                              fullWidth\n                              id={`items.${index}.price`}\n                              name={`items[${index}].price`}\n                              value={formik.values.items[index].price}\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={4} md={2}>\n                            <h4>Total</h4>\n                            <TextField\n                              disabled={true}\n                              variant=\"outlined\"\n                              className={styles.total}\n                              fullWidth\n                              id={`items.${index}.total`}\n                              name={`items[${index}].total`}\n                              value={\n                                formik.values.items[index].price *\n                                formik.values.items[index].quantity\n                              }\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n\n                          <Grid\n                            item\n                            className={styles.delete_btn}\n                            style={{\n                              alignItems: \"center\",\n                              justifyContent: \"flex-end\",\n                              marginTop: \"1rem\",\n                              paddingRight: \"0\",\n                            }}\n                            xs={2}\n                            md={1}\n                          >\n                            <button\n                              onClick={() => {\n                                arrayHelpers.remove(index);\n                                setOpen(true);\n                              }}\n                            >\n                              <DeleteIcon />\n                            </button>\n                          </Grid>\n                        </Grid>\n                      ))}\n                  </Grid>\n                  <Grid xs={12}>\n                    <button\n                      className={styles.add_new_item_btn}\n                      type=\"button\"\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: \"\",\n                          quantity: \"\",\n                          price: \"\",\n                          total: \"\",\n                        })\n                      }\n                    >\n                      + Add New Item\n                    </button>\n                  </Grid>\n                </>\n              )}\n            />\n            {itemError && (\n              <p className={styles.item_error}>\n                Please provide an item to bill\n              </p>\n            )}\n            {itemDetailsError && (\n              <p className={styles.item_error}>\n                Please fill out all the fields wioth correct values to create a\n                total\n              </p>\n            )}\n            <Grid\n              // xs={12}\n              container\n              style={{ margin: \"1rem 0\" }}\n            >\n              <button\n                style={{ marginLeft: \"auto\" }}\n                className={styles.cancel_btn}\n                onClick={() => resetForm()}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className={styles.save_changes_btn}>\n                Save Changes\n              </button>\n            </Grid>\n          </Grid>\n        </Form>\n      </FormikProvider>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useFormik, FormikProvider, FieldArray, Form, getIn } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { InvoiceContext } from \"../App\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport validateItems from \"./invoiceHelpers/validateItems\";\nimport calculateTotal from \"./invoiceHelpers/calculateTotal\";\nimport { validationSchema } from \"././invoiceHelpers/validationSchema\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"./EditOrCreateInvoice.module.scss\";\nimport formatDate from \"./invoiceHelpers/formatDate\";\n\nexport default function NewInvoice() {\n  const [paymentTermsState, setPaymentTermsState] = useState(30);\n\n  const [open, setOpen] = React.useState(false);\n  const [itemError, setItemError] = React.useState(null);\n  const [itemDetailsError, setItemDetailsError] = React.useState(null);\n\n  let { newInvoice, addNewInvoiceToState, cancel } = useContext(InvoiceContext);\n\n  useEffect(() => {\n    setPaymentTermsState(newInvoice.paymentTerms);\n  }, [newInvoice]);\n\n  const { paymentTerms } = newInvoice;\n\n  const formik = useFormik({\n    //As the formik docs say the items array ( ie field array component) is difficult to validate so I will validate it here instead\n\n    // I can use the initial value beow to prefill the form if i am editing it.\n    initialValues: newInvoice,\n    enableReinitialize: true,\n    validationSchema: validationSchema(),\n    onSubmit: (values) => {\n      if (validateItems(values)) {\n        setItemError(null);\n        let total = calculateTotal(values);\n        if (isNaN(total) | (total === \"0\")) {\n          return setItemDetailsError(true);\n        } else {\n          const valuesWithPaymentTermFromState = {\n            ...values,\n            total: total,\n            paymentTerms: paymentTermsState,\n          };\n          addNewInvoiceToState(valuesWithPaymentTermFromState);\n        }\n      } else {\n        setItemError(true);\n      }\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const resetAndCancel = () => {\n    formik.resetForm();\n    cancel();\n  };\n\n  return (\n    <div className={styles.invoice_edit_create_container}>\n      {/* The formikProvider component takes in my react useFormik hook and gives all the values and methods to the components  */}\n      <FormikProvider value={formik}>\n        <Form\n          style={{ display: \"flex\", flexWrap: \"wrap\" }}\n          onSubmit={formik.handleSubmit}\n          // fullWidth\n        >\n          <h2>New Invoice</h2>\n          <Grid container spacing={3}>\n            <Grid item xs={12} p>\n              <h4 className={styles.heading}>Bill From</h4>\n              <h4>Street</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.street\"\n                name=\"senderAddress.street\"\n                value={formik.values.senderAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.street\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.street\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.street\") &&\n                  getIn(formik.errors, \"senderAddress.street\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.city\"\n                name=\"senderAddress.city\"\n                value={formik.values.senderAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.city\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.city\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.city\") &&\n                  getIn(formik.errors, \"senderAddress.city\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.postCode\"\n                name=\"senderAddress.postCode\"\n                value={formik.values.senderAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.postCode\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.postCode\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.postCode\") &&\n                  getIn(formik.errors, \"senderAddress.postCode\")\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"senderAddress.country\"\n                name=\"senderAddress.country\"\n                value={formik.values.senderAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"senderAddress.country\") &&\n                  Boolean(getIn(formik.errors, \"senderAddress.country\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"senderAddress.country\") &&\n                  getIn(formik.errors, \"senderAddress.country\")\n                }\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <h4 className={styles.heading}>Bill To</h4>\n              <h4>Client Name</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientName\"\n                name=\"clientName\"\n                value={formik.values.clientName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientName && Boolean(formik.errors.clientName)\n                }\n                helperText={\n                  formik.touched.clientName && formik.errors.clientName\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client E-mail</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientEmail\"\n                name=\"clientEmail\"\n                value={formik.values.clientEmail}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientEmail &&\n                  Boolean(formik.errors.clientEmail)\n                }\n                helperText={\n                  formik.touched.clientEmail && formik.errors.clientEmail\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client Address</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.street\"\n                name=\"clientAddress.street\"\n                value={formik.values.clientAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.street\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.street\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.street\") &&\n                  getIn(formik.errors, \"clientAddress.street\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.city\"\n                name=\"clientAddress.city\"\n                value={formik.values.clientAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.city\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.city\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.city\") &&\n                  getIn(formik.errors, \"clientAddress.city\")\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.postCode\"\n                name=\"clientAddress.postCode\"\n                value={formik.values.clientAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.postCode\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.postCode\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.postCode\") &&\n                  getIn(formik.errors, \"clientAddress.postCode\")\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"clientAddress.country\"\n                name=\"clientAddress.country\"\n                value={formik.values.clientAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, \"clientAddress.country\") &&\n                  Boolean(getIn(formik.errors, \"clientAddress.country\"))\n                }\n                helperText={\n                  getIn(formik.touched, \"clientAddress.country\") &&\n                  getIn(formik.errors, \"clientAddress.country\")\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Invoice Due</h4>\n              <TextField\n                fullWidth\n                type=\"date\"\n                variant=\"outlined\"\n                id=\"paymentDue\"\n                name=\"paymentDue\"\n                defaultValue={formik.values.paymentDue}\n                value={formik.values.paymentDue}\n                onChange={formik.handleChange}\n                error={formik.touched.paymentDue && formik.errors.paymentDue}\n                helperText={\n                  formik.touched.paymentDue && formik.errors.paymentDue\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Payment terms</h4>\n              <Select\n                fullWidth\n                id=\"demo-controlled-open-select\"\n                open={open}\n                variant=\"outlined\"\n                onClose={handleClose}\n                displayEmpty\n                onOpen={handleOpen}\n                value={paymentTermsState}\n                onChange={(e) => setPaymentTermsState(e.target.value)}\n              >\n                {[1, 7, 14, 30].map((paymentTerm, index) => {\n                  if (paymentTerm !== paymentTerms) {\n                    return (\n                      <MenuItem value={paymentTerm} key={index}>\n                        <h4 style={{ color: \"black\", paddingBottom: \"0\" }}>\n                          Net {paymentTerm}\n                          {paymentTerm === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  } else {\n                    return (\n                      <MenuItem selected={true}>\n                        {\" \"}\n                        <h4 style={{ color: \"black\", paddingBottom: \"0\" }}>\n                          Net {paymentTerm}\n                          {paymentTerm === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  }\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Project description</h4>\n              <TextField\n                fullWidth\n                type=\"description\"\n                variant=\"outlined\"\n                id=\"description\"\n                name=\"description\"\n                defaultValue={formik.values.description}\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n            </Grid>\n\n            <Grid container>\n              <h3>Item List</h3>\n            </Grid>\n            {/* <Form> */}\n            <FieldArray\n              name=\"items\"\n              render={(arrayHelpers) => (\n                <>\n                  <Grid\n                    container\n\n                    // item xs={12}\n                  >\n                    {formik.values.items &&\n                      formik.values.items.length > 0 &&\n                      formik.values.items.map((item, index) => (\n                        <Grid\n                          container\n                          // item\n                          // xs={12}\n                          spacing={3}\n                          m={2}\n                          style={{ margin: \"1rem 0\" }}\n                        >\n                          <Grid item xs={6} md={3}>\n                            <h4>Item Name</h4>\n                            <TextField\n                              fullWidth\n                              variant=\"outlined\"\n                              id={`items.${index}.name`}\n                              name={`items.${index}.name`}\n                              value={formik.values.items[index].name}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Qty</h4>\n                            <TextField\n                              variant=\"outlined\"\n                              fullWidth\n                              id={`items.${index}`.quantity}\n                              name={`items[${index}].quantity`}\n                              value={formik.values.items[index].quantity}\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Price</h4>\n                            <TextField\n                              variant=\"outlined\"\n                              fullWidth\n                              id={`items.${index}.price`}\n                              name={`items[${index}].price`}\n                              value={formik.values.items[index].price}\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={4} md={2}>\n                            <h4>Total</h4>\n                            <TextField\n                              disabled={true}\n                              variant=\"outlined\"\n                              className={styles.total}\n                              fullWidth\n                              id={`items.${index}.total`}\n                              name={`items[${index}].total`}\n                              value={\n                                (parseInt(formik.values.items[index].price) *\n                                  parseInt(\n                                    formik.values.items[index].quantity\n                                  )) |\n                                0\n                              }\n                              style={{ border: \"1px solid transparent\" }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n\n                          {/* </Grid> */}\n                          <Grid\n                            item\n                            container\n                            className={styles.delete_btn}\n                            style={{\n                              alignItems: \"center\",\n                              justifyContent: \"flex-end\",\n                              marginTop: \"1rem\",\n                              paddingRight: \"0\",\n                            }}\n                            xs={2}\n                            md={1}\n                          >\n                            <button onClick={() => arrayHelpers.remove(index)}>\n                              <DeleteIcon />\n                            </button>\n                          </Grid>\n                        </Grid>\n                      ))}\n                  </Grid>\n                  <Grid xs={12}>\n                    <button\n                      className={styles.add_new_item_btn}\n                      type=\"button\"\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: \"\",\n                          quantity: \"\",\n                          price: \"\",\n                          total: \"\",\n                        })\n                      }\n                    >\n                      {/* show this when user has removed all friends from the list */}\n                      + Add New Item\n                    </button>\n                  </Grid>\n                </>\n              )}\n            />\n            {itemError && (\n              <p className={styles.item_error}>\n                Please provide an item to bill\n              </p>\n            )}\n            {itemDetailsError && (\n              <p className={styles.item_error}>\n                Please fill out all the fields wioth correct values to create a\n                total\n              </p>\n            )}\n\n            <Grid\n              // xs={12}\n              container\n              style={{ margin: \"1rem 0\" }}\n            >\n              <button\n                className={styles.cancel_btn}\n                onClick={() => resetAndCancel()}\n              >\n                Discard\n              </button>\n              <button type=\"submit\" className={styles.save_changes_btn}>\n                Save and Send\n              </button>\n            </Grid>\n          </Grid>\n        </Form>\n      </FormikProvider>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { InvoiceContext } from \"../App\";\nimport Media from \"react-media\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styles from \"./InvoiceHeader.module.scss\";\n\nexport default function InvoiceHeader() {\n  const { setFilterInvoices, invoices, displayNewInvoice } =\n    useContext(InvoiceContext);\n  const [showDropDown, setToggleDropDown] = useState(false);\n  return (\n    <div className={styles.invoice_header_container}>\n      <div className={styles.no_of_invoices_container}>\n        <h2>Invoices</h2>\n        <div className={styles.body_2}>\n          <Media\n            query=\"(min-width: 768px)\"\n            render={() => <span>There are </span>}\n          />\n          <span>{invoices.length} </span>\n          <Media query=\"(min-width: 768px)\" render={() => <span>total</span>} />\n          <span> invoices</span>\n        </div>\n      </div>\n      <div className={styles.filter_container}>\n        <button\n          onClick={() =>\n            setToggleDropDown((prevToggleState) => !prevToggleState)\n          }\n        >\n          <h4>\n            Filter\n            <Media\n              query=\"(min-width: 768px)\"\n              render={() => <span> By Status</span>}\n            />\n          </h4>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/icon-arrow-down.svg`}\n            alt=\"\"\n          />\n        </button>\n        <CSSTransition\n          in={showDropDown}\n          timeout={500}\n          classNames=\"alert\"\n          unmountOnExit\n        >\n          <div className={styles.drop_down_container}>\n            <label className=\"draft\">\n              <input\n                onChange={() => {\n                  setFilterInvoices(\"draft\");\n                  setToggleDropDown(false);\n                }}\n                type=\"radio\"\n                name=\"filter\"\n              />\n              <h4>Draft</h4>\n            </label>\n            <label className=\"pending\">\n              <input\n                onChange={() => {\n                  setFilterInvoices(\"pending\");\n                  setToggleDropDown(false);\n                }}\n                type=\"radio\"\n                name=\"filter\"\n              />\n              <h4>Pending</h4>\n            </label>\n            <label className=\"paid\">\n              <input\n                onChange={() => {\n                  setFilterInvoices(\"paid\");\n                  setToggleDropDown(false);\n                }}\n                type=\"radio\"\n                name=\"filter\"\n              />\n              <h4>Paid</h4>\n            </label>\n            <label className=\"paid\">\n              <input\n                onChange={() => {\n                  setFilterInvoices(\"none\");\n                  setToggleDropDown(false);\n                }}\n                type=\"radio\"\n                name=\"filter\"\n              />\n              <h4>All</h4>\n            </label>\n          </div>\n        </CSSTransition>\n      </div>\n      <button\n        onClick={() => displayNewInvoice()}\n        className={styles.new_invoice_btn}\n      >\n        <div className={styles.button_circle}>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/icon-plus.svg`}\n            alt=\"new invoice\"\n          />\n        </div>\n        <h4>New </h4>\n        <Media\n          query=\"(min-width: 768px)\"\n          render={() => <h4>&nbsp; Invoice</h4>}\n        />\n      </button>\n    </div>\n  );\n}\n","const generateNewInvoiceID = () => {\n  let newId = '';\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    .split('')\n    .map((letter) => letter.toUpperCase());\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  for (let i = 0; i < 2; i++) {\n    newId += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n  for (let i = 0; i < 4; i++) {\n    newId += numbers[Math.floor(Math.random() * numbers.length)];\n  }\n  return newId;\n};\n\nexport default generateNewInvoiceID;\n","import generateNewInvoiceID from \"./generateNewInvoiceID\";\nimport generateCreatedAt from \"./generateCreatedAt\";\nimport { generatePaymentDue } from \"./formatDate\";\n\nconst newInvoiceDefaultValues = () => {\n  return {\n    id: generateNewInvoiceID(),\n    createdAt: generateCreatedAt(),\n    paymentDue: \"\",\n    description: \"\",\n    // paymentTerms: 30,\n    clientName: \"\",\n    clientEmail: \"\",\n    senderAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\",\n    },\n    clientAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\",\n    },\n    status: \"pending\",\n    items: [],\n    total: \"0\",\n  };\n};\n\nexport default newInvoiceDefaultValues;\n","import React, { useContext } from 'react';\nimport { InvoiceContext } from '../App';\n\nexport default function DeleteModal() {\n  const { setDeleteModal, deleteInvoice, selectedInvoice } =\n    useContext(InvoiceContext);\n\n  return (\n    <div className='delete_modal_flex_container'>\n      <div className='modal_container'>\n        <h2>Confirm deletion</h2>\n        <div className='body_1'>\n          Are you sure you want to delete{' '}\n          {selectedInvoice.length !== 0 && selectedInvoice[0].id}? This action\n          cannot be undone.\n        </div>\n        <h4 className='button_container'>\n          <div onClick={() => setDeleteModal(false)} className='cancel_btn'>\n            Cancel\n          </div>\n          <div\n            onClick={() => deleteInvoice()}\n            deleteInvoice\n            className='delete_btn'>\n            Delete\n          </div>\n        </h4>\n      </div>\n    </div>\n  );\n}\n","import './App.scss';\nimport React, { useEffect, useState, createContext } from 'react';\nimport invoicesData from './data.json';\nimport NavBar from './components/NavBar';\nimport InvoiceDetails from './components/InvoiceDetails';\nimport Invoices from './components/Invoices';\nimport EditInvoice from './components/EditInvoice';\nimport CreateInvoice from './components/CreateInvoice';\nimport InvoiceHeader from './components/InvoiceHeader';\nimport newInvoiceDefaultValues from './components/invoiceHelpers/newInvoiceDefaultValues';\nimport { CSSTransition } from 'react-transition-group';\nimport DeleteModal from './components/DeleteModal';\nexport const InvoiceContext = createContext();\n\nfunction App() {\n  const [invoices, setInvoices] = useState([]);\n  const [newInvoice, setNewInvoice] = useState([]);\n  const [showNewInvoice, setShowNewinvoice] = useState(false);\n  const [filter, setFilterInvoices] = useState('none');\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [selectedInvoice, setSelectedInvoice] = useState([]);\n  const [backgroundGreyedOut, setBackgroundGreyedOut] = useState(false);\n  const [showEditInvoice, setShowEditInvoice] = useState(false);\n  const [showInvoiceDetails, setShowInvoiceDetails] = useState(false);\n  const [showInvoices, setShowInvoices] = useState(true);\n\n  useEffect(() => {\n    setInvoices(invoicesData);\n    setFilterInvoices(invoicesData);\n  }, []);\n\n  const markAsPaid = (id) => {\n    let updatedSelectedInvoice = null;\n    let updatedInvoices = invoices.map((invoice) => {\n      if (invoice.id === id) {\n        updatedSelectedInvoice = { ...invoice, status: 'paid' };\n        return { ...invoice, status: 'paid' };\n      } else {\n        return invoice;\n      }\n    });\n    setInvoices(updatedInvoices);\n    setSelectedInvoice([updatedSelectedInvoice]);\n  };\n\n  const deleteInvoice = () => {\n    const newInvoices = invoices.filter(\n      (invoice) => invoice.id !== selectedInvoice[0].id\n    );\n    setInvoices(newInvoices);\n    setDeleteModal(false);\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const cancel = () => {\n    setShowEditInvoice(false);\n    setShowNewinvoice(false);\n    setBackgroundGreyedOut(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const showDeleteModal = () => {\n    setDeleteModal(true);\n  };\n\n  const goBack = () => {\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowEditInvoice(true);\n    }, 500);\n  };\n\n  const goBackDetails = () => {\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const goBackEditOrCreate = () => {\n    setShowNewinvoice(false);\n    setShowEditInvoice(false);\n  };\n\n  const addNewInvoiceToState = (invoice) => {\n    setInvoices(invoices.concat(invoice));\n    setBackgroundGreyedOut(false);\n    setShowNewinvoice(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const displayNewInvoice = () => {\n    let defaultValues = newInvoiceDefaultValues();\n    setBackgroundGreyedOut(true);\n    setNewInvoice(defaultValues);\n    setShowNewinvoice(true);\n  };\n\n  const invoiceToUpdate = (updatedInvoice) => {\n    setShowInvoices(false);\n    setInvoices(invoices.filter((invoice) => invoice.id !== updatedInvoice.id));\n    setInvoices((prevInvoices) => prevInvoices.concat(updatedInvoice));\n    setShowEditInvoice(false);\n    setBackgroundGreyedOut(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const editInvoice = () => {\n    setBackgroundGreyedOut(true);\n    setShowEditInvoice(true);\n  };\n\n  const chosenInvoice = (id) => {\n    setFilterInvoices('none');\n    const selectedInvoice = invoices.filter((invoice) => invoice.id === id);\n    setSelectedInvoice(selectedInvoice);\n    setShowInvoices(false);\n    setTimeout(() => {\n      setShowInvoiceDetails(true);\n    }, 500);\n  };\n\n  return (\n    <div className='App'>\n      <InvoiceContext.Provider\n        value={{\n          invoices,\n          chosenInvoice,\n          selectedInvoice,\n          setFilterInvoices,\n          displayNewInvoice,\n          markAsPaid,\n          setDeleteModal,\n          addNewInvoiceToState,\n          invoiceToUpdate,\n          cancel,\n          showDeleteModal,\n          deleteInvoice,\n          editInvoice,\n          newInvoice,\n          deleteModal,\n          setBackgroundGreyedOut,\n          goBackDetails,\n          goBackEditOrCreate,\n          goBack,\n          showInvoices,\n          showInvoiceDetails,\n        }}>\n        <CSSTransition\n          in={deleteModal}\n          timeout={500}\n          classNames='invoices-move'\n          unmountOnExit>\n          <DeleteModal />\n        </CSSTransition>\n\n        <div className='main-invoice-container'>\n          <NavBar />\n\n          <CSSTransition\n            in={showInvoices}\n            timeout={500}\n            classNames='invoices-move'\n            unmountOnExit>\n            <InvoiceHeader />\n          </CSSTransition>\n\n          {invoices.length === 0 ? (\n            <div className='no-invoice-image'>\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/illustration-empty.svg`}\n                alt='no invoices'\n              />\n            </div>\n          ) : (\n            <Invoices filter={filter} />\n          )}\n\n          <CSSTransition\n            in={showInvoiceDetails}\n            timeout={500}\n            classNames='invoicesDetails-move'\n            unmountOnExit>\n            <InvoiceDetails />\n          </CSSTransition>\n        </div>\n\n        <CSSTransition\n          in={backgroundGreyedOut}\n          timeout={500}\n          classNames='invoices-move'\n          unmountOnExit>\n          <div className='greyed_out_background'></div>\n        </CSSTransition>\n\n        <CSSTransition\n          in={showNewInvoice}\n          timeout={500}\n          classNames='invoicesDetails-move'\n          unmountOnExit>\n          <CreateInvoice />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showEditInvoice}\n          timeout={500}\n          classNames='invoicesDetails-move'\n          unmountOnExit>\n          <EditInvoice />\n        </CSSTransition>\n      </InvoiceContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"InvoiceHeader_body_1__1fKC6\",\"body_2\":\"InvoiceHeader_body_2__r8-7Y\",\"App\":\"InvoiceHeader_App__3qqQH\",\"greyed_out_background\":\"InvoiceHeader_greyed_out_background__28Le5\",\"main-invoice-container\":\"InvoiceHeader_main-invoice-container__2bzna\",\"no-invoice-image\":\"InvoiceHeader_no-invoice-image__3pvWZ\",\"delete_modal_flex_container\":\"InvoiceHeader_delete_modal_flex_container__2AF1Y\",\"modal_container\":\"InvoiceHeader_modal_container__2VKL9\",\"button_container\":\"InvoiceHeader_button_container__22VOl\",\"cancel_btn\":\"InvoiceHeader_cancel_btn__2cQc7\",\"delete_btn\":\"InvoiceHeader_delete_btn__3eTQZ\",\"alert-enter\":\"InvoiceHeader_alert-enter__3A6HE\",\"alert-enter-active\":\"InvoiceHeader_alert-enter-active__2Ngoo\",\"alert-exit\":\"InvoiceHeader_alert-exit__rZnCf\",\"alert-exit-active\":\"InvoiceHeader_alert-exit-active__lvPkV\",\"invoices-move-enter\":\"InvoiceHeader_invoices-move-enter__1fHbf\",\"invoices-move-enter-active\":\"InvoiceHeader_invoices-move-enter-active__z0C14\",\"invoices-move-exit\":\"InvoiceHeader_invoices-move-exit__3KZOi\",\"invoices-move-exit-active\":\"InvoiceHeader_invoices-move-exit-active__3GfxL\",\"invoicesDetails-move-enter\":\"InvoiceHeader_invoicesDetails-move-enter__2g1ga\",\"invoicesDetails-move-enter-active\":\"InvoiceHeader_invoicesDetails-move-enter-active__3NLJs\",\"invoicesDetails-move-exit\":\"InvoiceHeader_invoicesDetails-move-exit__2xWa5\",\"invoicesDetails-move-exit-active\":\"InvoiceHeader_invoicesDetails-move-exit-active__2qJC9\",\"invoice_header_container\":\"InvoiceHeader_invoice_header_container__M1m3L\",\"no_of_invoices_container\":\"InvoiceHeader_no_of_invoices_container__ckGY0\",\"filter_container\":\"InvoiceHeader_filter_container__21bUg\",\"drop_down_container\":\"InvoiceHeader_drop_down_container__3Zeyw\",\"new_invoice_btn\":\"InvoiceHeader_new_invoice_btn__1h8zC\",\"button_circle\":\"InvoiceHeader_button_circle__Wd94d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"NavBar_body_1__K-CSI\",\"body_2\":\"NavBar_body_2__18ksk\",\"App\":\"NavBar_App__12WZU\",\"greyed_out_background\":\"NavBar_greyed_out_background__2C1z8\",\"main-invoice-container\":\"NavBar_main-invoice-container__1IAmU\",\"no-invoice-image\":\"NavBar_no-invoice-image__37VT-\",\"delete_modal_flex_container\":\"NavBar_delete_modal_flex_container__9uZwx\",\"modal_container\":\"NavBar_modal_container__1VNIF\",\"button_container\":\"NavBar_button_container__2cUIG\",\"cancel_btn\":\"NavBar_cancel_btn__beb9U\",\"delete_btn\":\"NavBar_delete_btn__PcmB7\",\"alert-enter\":\"NavBar_alert-enter__3hCJ0\",\"alert-enter-active\":\"NavBar_alert-enter-active__s6BCG\",\"alert-exit\":\"NavBar_alert-exit__8_FW1\",\"alert-exit-active\":\"NavBar_alert-exit-active__drVdE\",\"invoices-move-enter\":\"NavBar_invoices-move-enter__1ZZs6\",\"invoices-move-enter-active\":\"NavBar_invoices-move-enter-active__1uJlo\",\"invoices-move-exit\":\"NavBar_invoices-move-exit__BJfyQ\",\"invoices-move-exit-active\":\"NavBar_invoices-move-exit-active__1bEqV\",\"invoicesDetails-move-enter\":\"NavBar_invoicesDetails-move-enter__1YWI9\",\"invoicesDetails-move-enter-active\":\"NavBar_invoicesDetails-move-enter-active__1RvvH\",\"invoicesDetails-move-exit\":\"NavBar_invoicesDetails-move-exit__PZc_v\",\"invoicesDetails-move-exit-active\":\"NavBar_invoicesDetails-move-exit-active__1VTOC\",\"navbar_flex_container\":\"NavBar_navbar_flex_container__3PCLN\",\"logo_container\":\"NavBar_logo_container__3Sbm4\",\"nested_purple_pattern\":\"NavBar_nested_purple_pattern__qHbha\",\"day_or_night_btn\":\"NavBar_day_or_night_btn__3NlCP\",\"avatar_container\":\"NavBar_avatar_container__3Mn-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"InvoiceDetails_body_1__1rPp9\",\"body_2\":\"InvoiceDetails_body_2__2SMEO\",\"App\":\"InvoiceDetails_App__3_uIM\",\"greyed_out_background\":\"InvoiceDetails_greyed_out_background__27ZqJ\",\"main-invoice-container\":\"InvoiceDetails_main-invoice-container__1zujl\",\"no-invoice-image\":\"InvoiceDetails_no-invoice-image__2Rbil\",\"delete_modal_flex_container\":\"InvoiceDetails_delete_modal_flex_container__AiWJN\",\"modal_container\":\"InvoiceDetails_modal_container__1ku3T\",\"button_container\":\"InvoiceDetails_button_container__5_Asl\",\"cancel_btn\":\"InvoiceDetails_cancel_btn__B2dvO\",\"delete_btn\":\"InvoiceDetails_delete_btn__2Xuob\",\"alert-enter\":\"InvoiceDetails_alert-enter__OZwkJ\",\"alert-enter-active\":\"InvoiceDetails_alert-enter-active__1heoA\",\"alert-exit\":\"InvoiceDetails_alert-exit__1u0-z\",\"alert-exit-active\":\"InvoiceDetails_alert-exit-active__2LIVV\",\"invoices-move-enter\":\"InvoiceDetails_invoices-move-enter__2-2ps\",\"invoices-move-enter-active\":\"InvoiceDetails_invoices-move-enter-active__Sz9GR\",\"invoices-move-exit\":\"InvoiceDetails_invoices-move-exit__39HeZ\",\"invoices-move-exit-active\":\"InvoiceDetails_invoices-move-exit-active__cUplE\",\"invoicesDetails-move-enter\":\"InvoiceDetails_invoicesDetails-move-enter__OUZIX\",\"invoicesDetails-move-enter-active\":\"InvoiceDetails_invoicesDetails-move-enter-active__1A65c\",\"invoicesDetails-move-exit\":\"InvoiceDetails_invoicesDetails-move-exit__2Pd1p\",\"invoicesDetails-move-exit-active\":\"InvoiceDetails_invoicesDetails-move-exit-active__t5_9v\",\"invoice_details_container\":\"InvoiceDetails_invoice_details_container__i0-97\",\"go_back_section\":\"InvoiceDetails_go_back_section__NXlkw\",\"status_and_button\":\"InvoiceDetails_status_and_button__2cJpe\",\"pending_btn\":\"InvoiceDetails_pending_btn__2Vzbl\",\"circle_container\":\"InvoiceDetails_circle_container__3vnNN\",\"paid_btn\":\"InvoiceDetails_paid_btn__3K23W\",\"draft_btn\":\"InvoiceDetails_draft_btn__3wBEY\",\"edit_button\":\"InvoiceDetails_edit_button__22Ax4\",\"delete_button\":\"InvoiceDetails_delete_button__1wmoe\",\"paid_button\":\"InvoiceDetails_paid_button__3oNvv\",\"main_info_flex_container\":\"InvoiceDetails_main_info_flex_container__BgoIU\",\"id_container\":\"InvoiceDetails_id_container__t_a-e\",\"address\":\"InvoiceDetails_address__1MkdL\",\"payment_dates\":\"InvoiceDetails_payment_dates__1sZEJ\",\"payment\":\"InvoiceDetails_payment__2WnLm\",\"email\":\"InvoiceDetails_email__BycYZ\",\"sub_total_and_total_container\":\"InvoiceDetails_sub_total_and_total_container__1JLRY\",\"titles_container\":\"InvoiceDetails_titles_container__3wjx2\",\"item\":\"InvoiceDetails_item__3tAjy\",\"qty\":\"InvoiceDetails_qty__1RQoA\",\"price\":\"InvoiceDetails_price__1ljeq\",\"total\":\"InvoiceDetails_total__20QJ3\",\"invoice_item\":\"InvoiceDetails_invoice_item__3jyLl\",\"invoice_quantity\":\"InvoiceDetails_invoice_quantity__jCK4D\",\"invoice_name\":\"InvoiceDetails_invoice_name__3tw1Z\",\"invoice_price\":\"InvoiceDetails_invoice_price__3-_WV\",\"grand_total\":\"InvoiceDetails_grand_total__s6T5r\",\"fixed_buttons\":\"InvoiceDetails_fixed_buttons__3tq09\",\"invoice_address\":\"InvoiceDetails_invoice_address__3gvjk\",\"invoice_unit_price\":\"InvoiceDetails_invoice_unit_price__2gC-e\"};"],"sourceRoot":""}