{"version":3,"sources":["components/EditOrCreateInvoice.module.scss","components/Invoice.module.scss","components/NavBar.js","helpers/formatDate.js","components/InvoiceDetails.js","components/Invoice.js","components/Invoices.js","components/invoiceHelpers/validationSchema.js","components/invoiceHelpers/generateNewInvoiceID.js","components/invoiceHelpers/generateCreatedAt.js","components/invoiceHelpers/newInvoiceDefaultValues.js","components/invoiceHelpers/generatePaymentDue.js","components/EditInvoice.js","components/CreateInvoice.js","components/InvoiceHeader.js","components/DeleteModal.js","App.js","index.js","components/InvoiceHeader.module.scss","components/NavBar.module.scss","components/InvoiceDetails.module.scss"],"names":["module","exports","NavBar","className","styles","navbar_flex_container","logo_container","src","process","alt","nested_purple_pattern","day_or_night_btn","avatar_container","formatDateUK","date","formatDate","split","1","2","3","4","5","6","7","8","9","10","11","12","parseInt","InvoiceDetails","useState","dueDate","setDueDate","invoiceDate","setInvoiceDate","useContext","InvoiceContext","goBackDetails","selectedInvoice","markAsPaid","editInvoice","chosenInvoice","showDeleteModal","invoiceToUpdate","setBackgroundGreyedOut","deleteInvoice","status","id","clientEmail","clientName","clientAddress","senderAddress","paymentDue","createdAt","items","total","description","useEffect","button_style","paid_btn","draft_btn","pending_btn","invoice_details_container","go_back_section","onClick","status_and_button","circle_container","query","render","edit_button","delete_button","paid_button","main_info_flex_container","id_container","body_2","address","street","city","postCode","country","payment_dates","invoice","payment","invoice_address","email","sub_total_and_total_container","titles_container","item","qty","price","map","index","invoice_item","invoice_name","name","invoice_quantity","quantity","toFixed","invoice_unit_price","invoice_price","grand_total","fixed_buttons","Invoice","showInvoices","CSSTransition","in","timeout","mountOnEnter","classNames","unmountOnExit","invoice_flex_container_and_btn","due_date","Invoices","filter","invoices","console","log","filteredInvoices","invoicesToDisplay","validationSchema","yup","shape","min","required","paymentTerms","generateNewInvoiceID","newId","alphabet","letter","toUpperCase","numbers","i","Math","floor","random","length","DateTime","require","generateCreatedAt","now","c","year","month","day","newInvoiceDefaultValues","EditInvoice","paymentTermsState","setPaymentTermsState","React","open","setOpen","cancel","goBackEditOrCreate","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","valuesWithPaymentTermFromState","invoice_edit_create_container","value","style","display","flexWrap","handleSubmit","fullWidth","color","width","edit_hash","Grid","container","spacing","xs","p","heading","TextField","variant","onChange","handleChange","error","getIn","touched","Boolean","errors","helperText","md","type","defaultValue","Select","onClose","displayEmpty","onOpen","e","target","paymentTerm","MenuItem","paddingBottom","selected","arrayHelpers","m","margin","border","disabled","delete_btn","alignItems","justifyContent","marginTop","paddingRight","remove","add_new_item_btn","push","marginLeft","cancel_btn","resetForm","save_changes_btn","NewInvoice","newInvoice","addNewInvoiceToState","InvoiceHeader","setFilterInvoices","displayNewInvoice","dayTheme","setDayTheme","showDropDown","setToggleDropDown","invoice_header_container","no_of_invoices_container","filter_container","prevToggleState","drop_down_container","new_invoice_btn","button_circle","DeleteModal","setDeleteModal","deleteModal","createContext","App","setInvoices","setNewInvoice","showNewInvoice","setShowNewinvoice","setSelectedInvoice","backgroundGreyedOut","showEditInvoice","setShowEditInvoice","showInvoiceDetails","setShowInvoiceDetails","setShowInvoices","invoicesData","Provider","setTimeout","defaultValues","updatedSelectedInvoice","updatedInvoices","concat","window","scrollTo","updatedInvoice","prevInvoices","newInvoices","goBack","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c034961d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"EditOrCreateInvoice_body_1__1UFbD\",\"body_2\":\"EditOrCreateInvoice_body_2__2rQev\",\"App\":\"EditOrCreateInvoice_App__15w4U\",\"greyed_out_background\":\"EditOrCreateInvoice_greyed_out_background__16-SC\",\"main-invoice-container\":\"EditOrCreateInvoice_main-invoice-container__3Mzl0\",\"no-invoice-image\":\"EditOrCreateInvoice_no-invoice-image__2SZMV\",\"delete_modal_flex_container\":\"EditOrCreateInvoice_delete_modal_flex_container__3hy2Y\",\"modal_container\":\"EditOrCreateInvoice_modal_container__38mZ-\",\"button_container\":\"EditOrCreateInvoice_button_container__3Onp1\",\"cancel_btn\":\"EditOrCreateInvoice_cancel_btn__nBk_6\",\"delete_btn\":\"EditOrCreateInvoice_delete_btn__2x-RJ\",\"alert-enter\":\"EditOrCreateInvoice_alert-enter__1FmvG\",\"alert-enter-active\":\"EditOrCreateInvoice_alert-enter-active__1MSIA\",\"alert-exit\":\"EditOrCreateInvoice_alert-exit__17Q_y\",\"alert-exit-active\":\"EditOrCreateInvoice_alert-exit-active__1Bjku\",\"invoices-move-enter\":\"EditOrCreateInvoice_invoices-move-enter__2A2tf\",\"invoices-move-enter-active\":\"EditOrCreateInvoice_invoices-move-enter-active__1tDY5\",\"invoices-move-exit\":\"EditOrCreateInvoice_invoices-move-exit__35hj5\",\"invoices-move-exit-active\":\"EditOrCreateInvoice_invoices-move-exit-active__3G_fG\",\"invoicesDetails-move-enter\":\"EditOrCreateInvoice_invoicesDetails-move-enter__20V8_\",\"invoicesDetails-move-enter-active\":\"EditOrCreateInvoice_invoicesDetails-move-enter-active__37tow\",\"invoicesDetails-move-exit\":\"EditOrCreateInvoice_invoicesDetails-move-exit__1tW1T\",\"invoicesDetails-move-exit-active\":\"EditOrCreateInvoice_invoicesDetails-move-exit-active__rrfsm\",\"invoice_edit_create_container\":\"EditOrCreateInvoice_invoice_edit_create_container__1Q9dt\",\"heading\":\"EditOrCreateInvoice_heading__2sCqj\",\"edit_hash\":\"EditOrCreateInvoice_edit_hash__259Lc\",\"total\":\"EditOrCreateInvoice_total__2WBo4\",\"save_changes_btn\":\"EditOrCreateInvoice_save_changes_btn__39eaF\",\"add_new_item_btn\":\"EditOrCreateInvoice_add_new_item_btn__3a3Jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"Invoice_body_1__1fmlm\",\"body_2\":\"Invoice_body_2__E26cS\",\"App\":\"Invoice_App__1jQSX\",\"greyed_out_background\":\"Invoice_greyed_out_background__3nj0P\",\"main-invoice-container\":\"Invoice_main-invoice-container__33VUf\",\"no-invoice-image\":\"Invoice_no-invoice-image__2C6kW\",\"delete_modal_flex_container\":\"Invoice_delete_modal_flex_container__2GOGT\",\"modal_container\":\"Invoice_modal_container__2YTPO\",\"button_container\":\"Invoice_button_container__3vmdQ\",\"cancel_btn\":\"Invoice_cancel_btn__14dzw\",\"delete_btn\":\"Invoice_delete_btn__3VFnj\",\"alert-enter\":\"Invoice_alert-enter__2Z_Hg\",\"alert-enter-active\":\"Invoice_alert-enter-active__3XMFr\",\"alert-exit\":\"Invoice_alert-exit__3T2GP\",\"alert-exit-active\":\"Invoice_alert-exit-active__1S2Zb\",\"invoices-move-enter\":\"Invoice_invoices-move-enter__yS8ff\",\"invoices-move-enter-active\":\"Invoice_invoices-move-enter-active__2r-Hm\",\"invoices-move-exit\":\"Invoice_invoices-move-exit__1xXQs\",\"invoices-move-exit-active\":\"Invoice_invoices-move-exit-active__2mVnF\",\"invoicesDetails-move-enter\":\"Invoice_invoicesDetails-move-enter__3Aw1v\",\"invoicesDetails-move-enter-active\":\"Invoice_invoicesDetails-move-enter-active__2myDm\",\"invoicesDetails-move-exit\":\"Invoice_invoicesDetails-move-exit__27ecN\",\"invoicesDetails-move-exit-active\":\"Invoice_invoicesDetails-move-exit-active__2p-Nd\",\"invoice_flex_container_and_btn\":\"Invoice_invoice_flex_container_and_btn__3hqZe\",\"id_container\":\"Invoice_id_container__3ghQS\",\"due_date\":\"Invoice_due_date__3RMUG\",\"price\":\"Invoice_price__1Pawn\",\"name\":\"Invoice_name__1e3a_\",\"pending_btn\":\"Invoice_pending_btn__3DS-c\",\"circle_container\":\"Invoice_circle_container__2fcoJ\",\"paid_btn\":\"Invoice_paid_btn__FDHgH\",\"draft_btn\":\"Invoice_draft_btn__31z9w\",\"total\":\"Invoice_total__2RV4l\",\"status_pending\":\"Invoice_status_pending__X4NV9\"};","import React from 'react';\nimport { InvoiceContext } from '../App';\nimport styles from './NavBar.module.scss';\n\nexport default function NavBar() {\n  return (\n    <div className={styles.navbar_flex_container}>\n      <div className={styles.logo_container}>\n        <img src={`${process.env.PUBLIC_URL}/assets/logo.svg`} alt='' />\n        <div className={styles.nested_purple_pattern}></div>\n      </div>\n\n      <div className={styles.day_or_night_btn}>\n        <img src={`${process.env.PUBLIC_URL}/assets/icon-moon.svg`} alt='' />\n      </div>\n      <div className={styles.avatar_container}>\n        <img src={`${process.env.PUBLIC_URL}/assets/image-avatar.jpg`} alt='' />\n      </div>\n    </div>\n  );\n}\n","export const formatDateUK = (date) => {\n  const monthNumberToLabelMap = {\n    1: 'January',\n    2: 'February',\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'August',\n    9: 'September',\n    10: 'October',\n    11: 'November',\n    12: 'December',\n  };\n  let formatDate = date.split('-');\n\n  return `${formatDate[2]} ${monthNumberToLabelMap[parseInt(formatDate[1])]} ${\n    formatDate[0]\n  }`;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { InvoiceContext } from '../App';\nimport { formatDateUK } from '../helpers/formatDate';\nimport Media from 'react-media';\nimport styles from './InvoiceDetails.module.scss';\n\nexport default function InvoiceDetails() {\n  const [dueDate, setDueDate] = useState(null);\n  const [invoiceDate, setInvoiceDate] = useState(null);\n\n  const {\n    goBackDetails,\n    selectedInvoice,\n    markAsPaid,\n    chosenInvoice,\n    editInvoice,\n    invoiceToUpdate,\n    setBackgroundGreyedOut,\n    showDeleteModal,\n    deleteInvoice,\n  } = useContext(InvoiceContext);\n  const {\n    status,\n    id,\n    clientEmail,\n    clientName,\n    clientAddress,\n    senderAddress,\n    paymentDue,\n    createdAt,\n    items,\n    total,\n    description,\n  } = selectedInvoice[0];\n\n  useEffect(() => {\n    let dueDate = formatDateUK(paymentDue);\n    setDueDate(dueDate);\n    let invoiceDate = formatDateUK(createdAt);\n    setInvoiceDate(invoiceDate);\n  }, [paymentDue, createdAt]);\n\n  const button_style =\n    status === 'paid'\n      ? styles.paid_btn\n      : status === 'draft'\n      ? styles.draft_btn\n      : styles.pending_btn;\n\n  return (\n    <>\n      <div className={styles.invoice_details_container}>\n        <h2 className={styles.go_back_section}>\n          <button onClick={() => goBackDetails()}>\n            {' '}\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/icon-arrow-left.svg`}\n              alt='go back'\n            />\n            &nbsp; &nbsp; &nbsp;\n            <h4>Go back</h4>{' '}\n          </button>\n        </h2>\n\n        <div className={styles.status_and_button}>\n          <h4>status</h4>\n          <div className={button_style}>\n            <div className={styles.circle_container}></div>\n            {status}\n          </div>\n          <Media\n            query='(min-width: 768px)'\n            render={() => {\n              return (\n                <>\n                  <button\n                    onClick={() => editInvoice()}\n                    className={styles.edit_button}>\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => showDeleteModal(id)}\n                    className={styles.delete_button}>\n                    Delete\n                  </button>\n                  <button\n                    onClick={() => markAsPaid(id)}\n                    className={styles.paid_button}>\n                    Mark as paid\n                  </button>\n                </>\n              );\n            }}\n          />\n        </div>\n        <div className={styles.main_info_flex_container}>\n          <h4 className={styles.id_container}>\n            <span>#</span> {id}\n            <Media\n              query='(min-width: 768px)'\n              render={() => {\n                return (\n                  <div className={(styles.body_2, styles.description)}>\n                    {description}\n                  </div>\n                );\n              }}\n            />\n          </h4>\n          <div className={styles.address}>\n            <div className={styles.body_2}>{senderAddress.street}</div>\n            <div className={styles.body_2}>{senderAddress.city}</div>\n            <div className={styles.body_2}>{senderAddress.postCode}</div>\n            <div className={styles.body_2}>{senderAddress.country}</div>\n          </div>\n          <div className={styles.payment_dates}>\n            <div className={(styles.body_2, styles.invoice)}>Invoice Date</div>\n            <h4>{invoiceDate}</h4>\n            <div className={(styles.body_2, styles.payment)}>Payment Date</div>\n            <h4>{dueDate}</h4>\n          </div>\n          <div className={styles.invoice_address}>\n            <div className={styles.body_2}>Bill To</div>\n            <h4>{clientName}</h4>\n            <div className={styles.body_2}>{clientAddress.street}</div>\n            <div className={styles.body_2}>{clientAddress.city}</div>\n            <div className={styles.body_2}>{clientAddress.postCode}</div>\n            <div className={styles.body_2}>{clientAddress.country}</div>\n            <div className={styles.body_2}></div>\n          </div>\n          <div className={styles.email}>\n            <div className={styles.body_2}>Sent to:</div>\n            <h4>{clientEmail}</h4>\n          </div>\n\n          <div className={styles.sub_total_and_total_container}>\n            <Media\n              query='(min-width: 768px)'\n              render={() => {\n                return (\n                  <div className={styles.titles_container}>\n                    <div className={(styles.body_2, styles.item)}>\n                      Item Name\n                    </div>\n                    <div className={(styles.body_2, styles.qty)}>QTY</div>\n                    <div className={(styles.body_2, styles.price)}>Price</div>\n                    <div className={(styles.body_2, styles.total)}>Total</div>\n                  </div>\n                );\n              }}\n            />\n            {items.map((item, index) => (\n              <div key={index} className={styles.invoice_item}>\n                <h4 className={styles.invoice_name}>{item.name}</h4>\n                <h4 className={styles.invoice_quantity}>\n                  {item.quantity}\n                  <Media\n                    query='(max-width: 768px)'\n                    render={() => {\n                      return <> x £{item.price.toFixed(2)}</>;\n                    }}\n                  />\n                </h4>\n                <Media\n                  query='(min-width: 768px)'\n                  render={() => {\n                    return (\n                      <h4 className={styles.invoice_unit_price}>\n                        £ {item.price.toFixed(2)}\n                      </h4>\n                    );\n                  }}\n                />\n                <h4 className={styles.invoice_price}>\n                  £&nbsp;{(item.price * item.quantity).toFixed(2)}\n                </h4>\n              </div>\n            ))}\n          </div>\n          <div className={styles.grand_total}>\n            <div className={styles.body_2}>Grand Total</div>\n            <h2>£&nbsp; {total.toFixed(2)}</h2>\n          </div>\n        </div>\n      </div>\n      <Media\n        query='(max-width: 768px)'\n        render={() => {\n          return (\n            <div className={styles.fixed_buttons}>\n              <button\n                onClick={() => editInvoice()}\n                className={styles.edit_button}>\n                Edit\n              </button>\n              <button\n                onClick={() => showDeleteModal(id)}\n                className={styles.delete_button}>\n                Delete\n              </button>\n              <button\n                onClick={() => markAsPaid(id)}\n                className={styles.paid_button}>\n                Mark as paid\n              </button>\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Media from 'react-media';\nimport { InvoiceContext } from '../App';\nimport { formatDateUK } from '../helpers/formatDate';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Invoice.module.scss';\n\nexport default function Invoice({ invoice }) {\n  const { id, paymentDue, clientName, total, status } = invoice;\n  const { chosenInvoice, showInvoices } = useContext(InvoiceContext);\n  const [formattedDate, setFormattedDate] = useState(null);\n\n  // useEffect(() => {\n  //   console.log(paymentDue);\n  //   const formatDate = formatDateUK(paymentDue);\n  //   setFormattedDate(formatDate);\n  // }, [paymentDue]);\n\n  const button_style =\n    invoice.status === 'paid'\n      ? styles.paid_btn\n      : status === 'draft'\n      ? styles.draft_btn\n      : styles.pending_btn;\n\n  return (\n    <>\n      <CSSTransition\n        in={showInvoices}\n        timeout={500}\n        mountOnEnter\n        classNames='invoices-move'\n        unmountOnExit>\n        <div\n          onClick={() => chosenInvoice(id, false)}\n          className={styles.invoice_flex_container_and_btn}>\n          <h4 className={styles.id_container}>\n            <span>#</span> {id}\n          </h4>\n          <div className={(styles.due_date, styles.body_2)}>\n            {/* {formattedDate} */}\n          </div>\n\n          <h4 className={styles.total}>£{total}</h4>\n          <div className={(styles.body_2, styles.name)}>{clientName}</div>\n          <div className={button_style}>\n            <div className={styles.circle_container}></div>\n            {status}\n          </div>\n          <Media\n            query='(min-width: 768px)'\n            render={() => (\n              <button>\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/icon-arrow-right.svg`}\n                  alt=''\n                />\n              </button>\n            )}\n          />\n        </div>\n      </CSSTransition>\n    </>\n  );\n}\n","import { SignalCellularNoSimOutlined } from '@material-ui/icons';\nimport React, { useContext } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { InvoiceContext } from '../App';\nimport Invoice from './Invoice';\n\nexport default function Invoices({ filter }) {\n  const { invoices } = useContext(InvoiceContext);\n\n  let invoicesToDisplay = () => {\n    console.log(filter, invoices);\n    let filteredInvoices = invoices;\n    switch (filter) {\n      case 'draft':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'draft'\n        );\n        break;\n      case 'pending':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'pending'\n        );\n        break;\n      case 'paid':\n        filteredInvoices = invoices.filter(\n          (invoice) => invoice.status === 'paid'\n        );\n        break;\n      case 'none':\n        filteredInvoices = invoices;\n        break;\n      default:\n        filteredInvoices = invoices;\n        break;\n    }\n    return filteredInvoices.map((invoice) => <Invoice invoice={invoice} />);\n  };\n\n  return <>{invoicesToDisplay()}</>;\n}\n","import * as yup from 'yup';\n\nexport const validationSchema = () =>\n  yup.object().shape({\n    senderAddress: yup.object().shape({\n      street: yup\n        .string()\n        .min(3)\n        .required('Please enter an address, minimum 3 characters'),\n      city: yup\n        .string()\n        .min(3)\n        .required('Please enter a city, minimum 3 characters'),\n      postCode: yup\n        .string()\n        .min(3)\n        .required('Please enter a postCode, minimum 3 characters'),\n      country: yup\n        .string()\n        .min(3)\n        .required('Please enter a country, minimum 3 characters'),\n    }),\n    clientAddress: yup.object().shape({\n      street: yup\n        .string()\n        .min(3)\n        .required('Please enter an address, minimum 3 characters'),\n      city: yup\n        .string()\n        .min(3)\n        .required('Please enter a city, minimum 3 characters'),\n      postCode: yup\n        .string()\n        .min(3)\n        .required('Please enter a postCode, minimum 3 characters'),\n      country: yup\n        .string()\n        .min(3)\n        .required('Please enter a country, minimum 3 characters'),\n    }),\n    description: yup.string().min(3).required('Please enter a description'),\n    clientName: yup.string().min(3).required('Please enter a client name'),\n    paymentTerms: yup.number().required('Please enter a payment term'),\n    clientEmail: yup.string().min(3).required('Please enter a client email'),\n\n    items: yup\n      .array()\n      // .of(\n      //   yup.object().shape({\n      //     name: yup.string().min(3).required('Please enter an item name'),\n      //     quantity: yup.string().min(3).required('Please  enter a quantity '),\n      //     price: yup.number().min(1).required('Please enter a price'),\n      //     total: yup.number().min(1).required('Please enter a total'),\n      //   })\n      // )\n      .required('must have an item'),\n  });\n","const generateNewInvoiceID = () => {\n  let newId = '';\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    .split('')\n    .map((letter) => letter.toUpperCase());\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  for (let i = 0; i < 2; i++) {\n    newId += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n  for (let i = 0; i < 4; i++) {\n    newId += numbers[Math.floor(Math.random() * numbers.length)];\n  }\n  return newId;\n};\n\nexport default generateNewInvoiceID;\n","import { formatDateUK } from '../../helpers/formatDate';\nconst { DateTime } = require('luxon');\n\nconst generateCreatedAt = () => {\n  let time = DateTime.now();\n  const { year, month, day } = time.c;\n\n  console.log(formatDateUK(`${year}-${month}-${day}`));\n  return formatDateUK(`${year}-${month}-${day}`);\n};\n\nexport default generateCreatedAt;\n","import generateNewInvoiceID from './generateNewInvoiceID';\nimport generateCreatedAt from './generateCreatedAt';\nimport { generatePaymentDue } from './generatePaymentDue';\n\nconst newInvoiceDefaultValues = () => {\n  return {\n    id: generateNewInvoiceID(),\n    createdAt: generateCreatedAt(),\n    paymentDue: '',\n    description: '',\n    paymentTerms: 30,\n    clientName: '',\n    clientEmail: '',\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    status: 'pending',\n    items: [\n      {\n        name: '',\n        quantity: 1,\n        price: 0,\n        total: 0,\n      },\n    ],\n    total: '',\n  };\n};\n\nexport default newInvoiceDefaultValues;\n","import { formatDateUK } from '../../helpers/formatDate';\nconst { DateTime } = require('luxon');\n\nexport const generatePaymentDue = () => {\n  const currentDate = new Date();\n\n  let paymentDue = currentDate.setDate(currentDate.getDate() + 30);\n  console.log(paymentDue);\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getIn, useFormik, FormikProvider, FieldArray, Form } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InvoiceContext } from '../App';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './EditOrCreateInvoice.module.scss';\nimport { validationSchema } from '././invoiceHelpers/validationSchema';\nimport defaultValues from './invoiceHelpers/newInvoiceDefaultValues';\n\nexport default function EditInvoice() {\n  const [paymentTermsState, setPaymentTermsState] = useState();\n\n  const [open, setOpen] = React.useState(false);\n\n  let { selectedInvoice, invoiceToUpdate, cancel, goBackEditOrCreate } =\n    useContext(InvoiceContext);\n\n  useEffect(() => {\n    setPaymentTermsState(selectedInvoice[0].paymentTerms);\n  }, [selectedInvoice]);\n\n  const {\n    id,\n    createdAt,\n    paymentDue,\n    description,\n    paymentTerms,\n    clientName,\n    clientEmail,\n    senderAddress: { street, city, postCode, country },\n    clientAddress,\n    status,\n    items,\n    total,\n  } = selectedInvoice[0];\n\n  const formik = useFormik({\n    // I can use the initial value beow to prefill the form if i am editing it.\n    initialValues: {\n      id,\n      createdAt,\n      paymentDue,\n      description,\n      paymentTerms,\n      clientName,\n      clientEmail,\n      status,\n      senderAddress: {\n        street: street,\n        city: city,\n        postCode: postCode,\n        country: country,\n      },\n      clientAddress: {\n        street: clientAddress.street,\n        city: clientAddress.city,\n        postCode: clientAddress.postCode,\n        country: clientAddress.country,\n      },\n      items,\n      total,\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema(),\n    onSubmit: (values) => {\n      const valuesWithPaymentTermFromState = {\n        ...values,\n        paymentTerms: paymentTermsState,\n      };\n      invoiceToUpdate(valuesWithPaymentTermFromState);\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const resetForm = () => {\n    formik.resetForm();\n\n    cancel();\n  };\n\n  return (\n    <>\n      <div className={styles.invoice_edit_create_container}>\n        {/* The formikProvider component takes in my react useFormik hook and gives all the values and methods to the components  */}\n        <FormikProvider value={formik}>\n          <Form\n            style={{ display: 'flex', flexWrap: 'wrap' }}\n            onSubmit={formik.handleSubmit}\n            fullWidth>\n            <button\n              onClick={() => goBackEditOrCreate()}\n              style={{ display: 'flex', color: 'black', width: '100%' }}>\n              {' '}\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/icon-arrow-left.svg`}\n                alt='go back'\n              />\n              &nbsp; &nbsp; &nbsp;\n              <h4 style={{ color: 'black' }}>Go back</h4>{' '}\n            </button>\n            <h2>\n              Edit <span className={styles.edit_hash}>#</span>\n              {id}\n            </h2>\n            <Grid container spacing={3}>\n              <Grid item xs={12} p>\n                <h4 className={styles.heading}>Bill From</h4>\n                <h4>Street</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='senderAddress.street'\n                  name='senderAddress.street'\n                  value={formik.values.senderAddress.street}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'senderAddress.street') &&\n                    Boolean(getIn(formik.errors, 'senderAddress.street'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'senderAddress.street') &&\n                    getIn(formik.errors, 'senderAddress.street')\n                  }\n                />\n              </Grid>\n              <Grid item xs={6} md={4}>\n                <h4>City</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='senderAddress.city'\n                  name='senderAddress.city'\n                  value={formik.values.senderAddress.city}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'senderAddress.city') &&\n                    Boolean(getIn(formik.errors, 'senderAddress.city'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'senderAddress.city') &&\n                    getIn(formik.errors, 'senderAddress.city')\n                  }\n                />\n              </Grid>\n              <Grid item xs={6} md={4}>\n                <h4>Post Code</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='senderAddress.postCode'\n                  name='senderAddress.postCode'\n                  value={formik.values.senderAddress.postCode}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'senderAddress.postCode') &&\n                    Boolean(getIn(formik.errors, 'senderAddress.postCode'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'senderAddress.postCode') &&\n                    getIn(formik.errors, 'senderAddress.postCode')\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <h4>Country</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='senderAddress.country'\n                  name='senderAddress.country'\n                  value={formik.values.senderAddress.country}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'senderAddress.country') &&\n                    Boolean(getIn(formik.errors, 'senderAddress.country'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'senderAddress.country') &&\n                    getIn(formik.errors, 'senderAddress.country')\n                  }\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <h4 className={styles.heading}>Bill To</h4>\n                <h4>Client Name</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientName'\n                  name='clientName'\n                  value={formik.values.clientName}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.clientName &&\n                    Boolean(formik.errors.clientName)\n                  }\n                  helperText={\n                    formik.touched.clientName && formik.errors.clientName\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <h4>Client E-mail</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientEmail'\n                  name='clientEmail'\n                  value={formik.values.clientEmail}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.clientEmail &&\n                    Boolean(formik.errors.clientEmail)\n                  }\n                  helperText={\n                    formik.touched.clientEmail && formik.errors.clientEmail\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <h4>Client Address</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientAddress.street'\n                  name='clientAddress.street'\n                  value={formik.values.clientAddress.street}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'clientAddress.street') &&\n                    Boolean(getIn(formik.errors, 'clientAddress.street'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'clientAddress.street') &&\n                    getIn(formik.errors, 'clientAddress.street')\n                  }\n                />\n              </Grid>\n              <Grid item xs={6} md={4}>\n                <h4>City</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientAddress.city'\n                  name='clientAddress.city'\n                  value={formik.values.clientAddress.city}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'clientAddress.city') &&\n                    Boolean(getIn(formik.errors, 'clientAddress.city'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'clientAddress.city') &&\n                    getIn(formik.errors, 'clientAddress.city')\n                  }\n                />\n              </Grid>\n              <Grid item xs={6} md={4}>\n                <h4>Post Code</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientAddress.postCode'\n                  name='clientAddress.postCode'\n                  value={formik.values.clientAddress.postCode}\n                  onChange={formik.handleChange}\n                  error={\n                    getIn(formik.touched, 'clientAddress.postCode') &&\n                    Boolean(getIn(formik.errors, 'clientAddress.postCode'))\n                  }\n                  helperText={\n                    getIn(formik.touched, 'clientAddress.postCode') &&\n                    getIn(formik.errors, 'clientAddress.postCode')\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <h4>Country</h4>\n                <TextField\n                  fullWidth\n                  variant='outlined'\n                  id='clientAddress.country'\n                  name='clientAddress.country'\n                  value={formik.values.clientAddress.country}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.clientAddress &&\n                    Boolean(formik.errors.clientAddress)\n                  }\n                  helperText={\n                    formik.touched.clientAddress && formik.errors.clientAddress\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <h4>Invoice Due</h4>\n                <TextField\n                  fullWidth\n                  type='date'\n                  variant='outlined'\n                  id='paymentDue'\n                  name='paymentDue'\n                  defaultValue={paymentDue}\n                  value={formik.values.paymentDue}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.paymentDue &&\n                    Boolean(formik.errors.paymentDue)\n                  }\n                  helperText={\n                    formik.touched.paymentDue && formik.errors.paymentDue\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <h4>Payment terms</h4>\n                <Select\n                  fullWidth\n                  id='demo-controlled-open-select'\n                  open={open}\n                  variant='outlined'\n                  onClose={handleClose}\n                  displayEmpty\n                  onOpen={handleOpen}\n                  value={paymentTermsState}\n                  onChange={(e) => setPaymentTermsState(e.target.value)}>\n                  {[1, 7, 14, 30].map((paymentTerm, index) => {\n                    if (paymentTerm !== paymentTerms) {\n                      return (\n                        <MenuItem value={paymentTerm} key={index}>\n                          <h4 style={{ color: 'black', paddingBottom: '0' }}>\n                            Net {paymentTerm}\n                            {paymentTerm === 1 ? (\n                              <span> Day</span>\n                            ) : (\n                              <span> Days</span>\n                            )}\n                          </h4>\n                        </MenuItem>\n                      );\n                    } else {\n                      return (\n                        <MenuItem selected={true}>\n                          {' '}\n                          <h4 style={{ color: 'black', paddingBottom: '0' }}>\n                            Net {paymentTerms}\n                            {paymentTerms === 1 ? (\n                              <span> Day</span>\n                            ) : (\n                              <span> Days</span>\n                            )}\n                          </h4>\n                        </MenuItem>\n                      );\n                    }\n                  })}\n                </Select>\n              </Grid>\n              <Grid item xs={12}>\n                <h4>Project description</h4>\n                <TextField\n                  fullWidth\n                  type='description'\n                  variant='outlined'\n                  id='description'\n                  name='description'\n                  defaultValue={description}\n                  value={formik.values.description}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.description &&\n                    Boolean(formik.errors.description)\n                  }\n                  helperText={\n                    formik.touched.description && formik.errors.description\n                  }\n                />\n              </Grid>\n\n              <Grid item container xs={12}>\n                <h3>Item List</h3>\n              </Grid>\n\n              {/* <Form> */}\n              <FieldArray\n                name='items'\n                render={(arrayHelpers) => (\n                  <>\n                    <Grid container item xs={12}>\n                      {formik.values.items &&\n                        formik.values.items.length > 0 &&\n                        formik.values.items.map((item, index) => (\n                          <Grid\n                            container\n                            item\n                            xs={12}\n                            spacing={3}\n                            m={2}\n                            style={{ margin: '1rem 0' }}>\n                            <Grid item xs={6} md={3}>\n                              <h4>Item Name</h4>\n                              <TextField\n                                fullWidth\n                                variant='outlined'\n                                id={`items.${index}.name`}\n                                name={`items.${index}.name`}\n                                value={formik.values.items[index].name}\n                                onChange={formik.handleChange}\n                                // error={\n                                //   getIn(formik.touched, `items${index}.name`) &&\n                                //   Boolean(\n                                //     getIn(formik.errors, `items${index}.name`)\n                                //   )\n                                // }\n                                // helperText={\n                                //   getIn(formik.touched, `items${index}.name`) &&\n                                //   Boolean(\n                                //     getIn(formik.errors, `items${index}.name`)\n                                //   )\n                                // }\n                              />\n                            </Grid>\n                            <Grid item xs={6} md={3}>\n                              <h4>Qty</h4>\n                              <TextField\n                                variant='outlined'\n                                fullWidth\n                                id={`items.${index}`.quantity}\n                                name={`items[${index}].quantity`}\n                                value={formik.values.items[index].quantity}\n                                style={{ border: '1px solid transparent' }}\n                                onChange={formik.handleChange}\n                              />\n                            </Grid>\n                            <Grid item xs={6} md={3}>\n                              <h4>Price</h4>\n                              <TextField\n                                variant='outlined'\n                                fullWidth\n                                id={`items.${index}.price`}\n                                name={`items[${index}].price`}\n                                value={formik.values.items[index].price}\n                                style={{ border: '1px solid transparent' }}\n                                onChange={formik.handleChange}\n                              />\n                            </Grid>\n                            <Grid item xs={4} md={2}>\n                              <h4>Total</h4>\n                              <TextField\n                                disabled={true}\n                                variant='outlined'\n                                className={styles.total}\n                                fullWidth\n                                id={`items.${index}.total`}\n                                name={`items[${index}].total`}\n                                value={\n                                  formik.values.items[index].price *\n                                  formik.values.items[index].quantity\n                                }\n                                style={{ border: '1px solid transparent' }}\n                                onChange={formik.handleChange}\n                              />\n                            </Grid>\n\n                            <Grid\n                              item\n                              container\n                              className={styles.delete_btn}\n                              style={{\n                                alignItems: 'center',\n                                justifyContent: 'flex-end',\n                                marginTop: '1rem',\n                                paddingRight: '0',\n                              }}\n                              xs={2}\n                              md={1}>\n                              <button\n                                onClick={() => arrayHelpers.remove(index)}>\n                                <DeleteIcon />\n                              </button>\n                            </Grid>\n                          </Grid>\n                        ))}\n                    </Grid>\n                    <Grid xs={12}>\n                      <button\n                        className={styles.add_new_item_btn}\n                        type='button'\n                        onClick={() =>\n                          arrayHelpers.push({\n                            name: '',\n                            quantity: '',\n                            price: '',\n                            total: '',\n                          })\n                        }>\n                        + Add New Item\n                      </button>\n                    </Grid>\n                  </>\n                )}\n              />\n\n              <Grid xs={12} container style={{ margin: '1rem 0' }}>\n                <button\n                  style={{ marginLeft: 'auto' }}\n                  className={styles.cancel_btn}\n                  onClick={() => resetForm()}>\n                  Cancel\n                </button>\n                <button type='submit' className={styles.save_changes_btn}>\n                  Save Changes\n                </button>\n              </Grid>\n            </Grid>\n          </Form>\n        </FormikProvider>\n      </div>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { useFormik, FormikProvider, FieldArray, Form, getIn } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InvoiceContext } from '../App';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { validationSchema } from '././invoiceHelpers/validationSchema';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './EditOrCreateInvoice.module.scss';\n\nexport default function NewInvoice() {\n  const [paymentTermsState, setPaymentTermsState] = useState(30);\n\n  const [open, setOpen] = React.useState(false);\n\n  let { newInvoice, addNewInvoiceToState, goBackEditOrCreate, cancel } =\n    useContext(InvoiceContext);\n\n  useEffect(() => {\n    setPaymentTermsState(newInvoice.paymentTerms);\n  }, [newInvoice]);\n\n  const { id, createdAt, paymentTerms } = newInvoice;\n\n  const formik = useFormik({\n    // I can use the initial value beow to prefill the form if i am editing it.\n    initialValues: newInvoice,\n    enableReinitialize: true,\n    validationSchema: validationSchema(),\n    onSubmit: (values) => {\n      const valuesWithPaymentTermFromState = {\n        ...values,\n        paymentTerms: paymentTermsState,\n      };\n      addNewInvoiceToState(valuesWithPaymentTermFromState);\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const resetAndCancel = () => {\n    formik.resetForm();\n    cancel();\n  };\n\n  console.log(formik);\n\n  return (\n    <div className={styles.invoice_edit_create_container}>\n      {/* The formikProvider component takes in my react useFormik hook and gives all the values and methods to the components  */}\n      <FormikProvider value={formik}>\n        <Form\n          style={{ display: 'flex', flexWrap: 'wrap' }}\n          onSubmit={formik.handleSubmit}\n          fullWidth>\n          <h2>New Invoice</h2>\n          <Grid container spacing={3}>\n            <Grid item xs={12} p>\n              <h4 className={styles.heading}>Bill From</h4>\n              <h4>Street</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='senderAddress.street'\n                name='senderAddress.street'\n                value={formik.values.senderAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'senderAddress.street') &&\n                  Boolean(getIn(formik.errors, 'senderAddress.street'))\n                }\n                helperText={\n                  getIn(formik.touched, 'senderAddress.street') &&\n                  getIn(formik.errors, 'senderAddress.street')\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='senderAddress.city'\n                name='senderAddress.city'\n                value={formik.values.senderAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'senderAddress.city') &&\n                  Boolean(getIn(formik.errors, 'senderAddress.city'))\n                }\n                helperText={\n                  getIn(formik.touched, 'senderAddress.city') &&\n                  getIn(formik.errors, 'senderAddress.city')\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='senderAddress.postCode'\n                name='senderAddress.postCode'\n                value={formik.values.senderAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'senderAddress.postCode') &&\n                  Boolean(getIn(formik.errors, 'senderAddress.postCode'))\n                }\n                helperText={\n                  getIn(formik.touched, 'senderAddress.postCode') &&\n                  getIn(formik.errors, 'senderAddress.postCode')\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='senderAddress.country'\n                name='senderAddress.country'\n                value={formik.values.senderAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'senderAddress.country') &&\n                  Boolean(getIn(formik.errors, 'senderAddress.country'))\n                }\n                helperText={\n                  getIn(formik.touched, 'senderAddress.country') &&\n                  getIn(formik.errors, 'senderAddress.country')\n                }\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <h4 className={styles.heading}>Bill To</h4>\n              <h4>Client Name</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientName'\n                name='clientName'\n                value={formik.values.clientName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientName && Boolean(formik.errors.clientName)\n                }\n                helperText={\n                  formik.touched.clientName && formik.errors.clientName\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client E-mail</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientEmail'\n                name='clientEmail'\n                value={formik.values.clientEmail}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.clientEmail &&\n                  Boolean(formik.errors.clientEmail)\n                }\n                helperText={\n                  formik.touched.clientEmail && formik.errors.clientEmail\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Client Address</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientAddress.street'\n                name='clientAddress.street'\n                value={formik.values.clientAddress.street}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'clientAddress.street') &&\n                  Boolean(getIn(formik.errors, 'clientAddress.street'))\n                }\n                helperText={\n                  getIn(formik.touched, 'clientAddress.street') &&\n                  getIn(formik.errors, 'clientAddress.street')\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>City</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientAddress.city'\n                name='clientAddress.city'\n                value={formik.values.clientAddress.city}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'clientAddress.city') &&\n                  Boolean(getIn(formik.errors, 'clientAddress.city'))\n                }\n                helperText={\n                  getIn(formik.touched, 'clientAddress.city') &&\n                  getIn(formik.errors, 'clientAddress.city')\n                }\n              />\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <h4>Post Code</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientAddress.postCode'\n                name='clientAddress.postCode'\n                value={formik.values.clientAddress.postCode}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'clientAddress.postCode') &&\n                  Boolean(getIn(formik.errors, 'clientAddress.postCode'))\n                }\n                helperText={\n                  getIn(formik.touched, 'clientAddress.postCode') &&\n                  getIn(formik.errors, 'clientAddress.postCode')\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4>Country</h4>\n              <TextField\n                fullWidth\n                variant='outlined'\n                id='clientAddress.country'\n                name='clientAddress.country'\n                value={formik.values.clientAddress.country}\n                onChange={formik.handleChange}\n                error={\n                  getIn(formik.touched, 'clientAddress.country') &&\n                  Boolean(getIn(formik.errors, 'clientAddress.country'))\n                }\n                helperText={\n                  getIn(formik.touched, 'clientAddress.country') &&\n                  getIn(formik.errors, 'clientAddress.country')\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Invoice Due</h4>\n              <TextField\n                fullWidth\n                type='date'\n                variant='outlined'\n                id='paymentDue'\n                name='paymentDue'\n                defaultValue={formik.values.paymentDue}\n                value={formik.values.paymentDue}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.paymentDue && Boolean(formik.errors.paymentDue)\n                }\n                helperText={\n                  formik.touched.paymentDue && formik.errors.paymentDue\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Payment terms</h4>\n              <Select\n                fullWidth\n                id='demo-controlled-open-select'\n                open={open}\n                variant='outlined'\n                onClose={handleClose}\n                displayEmpty\n                onOpen={handleOpen}\n                value={paymentTermsState}\n                onChange={(e) => setPaymentTermsState(e.target.value)}>\n                {[1, 7, 14, 30].map((paymentTerm, index) => {\n                  if (paymentTerm !== paymentTerms) {\n                    return (\n                      <MenuItem value={paymentTerm} key={index}>\n                        <h4 style={{ color: 'black', paddingBottom: '0' }}>\n                          Net {paymentTerm}\n                          {paymentTerm === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  } else {\n                    return (\n                      <MenuItem selected={true}>\n                        {' '}\n                        <h4 style={{ color: 'black', paddingBottom: '0' }}>\n                          Net {paymentTerm}\n                          {paymentTerm === 1 ? (\n                            <span> Day</span>\n                          ) : (\n                            <span> Days</span>\n                          )}\n                        </h4>\n                      </MenuItem>\n                    );\n                  }\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <h4>Project description</h4>\n              <TextField\n                fullWidth\n                type='description'\n                variant='outlined'\n                id='description'\n                name='description'\n                defaultValue={formik.values.description}\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n            </Grid>\n\n            <Grid item container xs={12}>\n              <h3>Item List</h3>\n            </Grid>\n\n            {/* <Form> */}\n            <FieldArray\n              name='items'\n              render={(arrayHelpers) => (\n                <>\n                  <Grid container item xs={12}>\n                    {formik.values.items &&\n                      formik.values.items.length > 0 &&\n                      formik.values.items.map((item, index) => (\n                        <Grid\n                          container\n                          item\n                          xs={12}\n                          spacing={3}\n                          m={2}\n                          style={{ margin: '1rem 0' }}>\n                          <Grid item xs={6} md={3}>\n                            <h4>Item Name</h4>\n                            <TextField\n                              fullWidth\n                              variant='outlined'\n                              id={`items.${index}`}\n                              name={`items.${index}`}\n                              value={formik.values.items[index].name}\n                              onChange={formik.handleChange}\n                              // error={\n                              //   formik.touched.description &&\n                              //   Boolean(formik.errors.description)\n                              // }\n                              // helperText={\n                              //   formik.touched.description &&\n                              //   formik.errors.description\n                              // }\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Qty</h4>\n                            <TextField\n                              variant='outlined'\n                              fullWidth\n                              id={`items.${index}`.quantity}\n                              name={`items[${index}].quantity`}\n                              value={formik.values.items[index].quantity}\n                              style={{ border: '1px solid transparent' }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={6} md={3}>\n                            <h4>Price</h4>\n                            <TextField\n                              variant='outlined'\n                              fullWidth\n                              id={`items.${index}.price`}\n                              name={`items[${index}].price`}\n                              value={formik.values.items[index].price}\n                              style={{ border: '1px solid transparent' }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n                          <Grid item xs={4} md={2}>\n                            <h4>Total</h4>\n                            <TextField\n                              disabled={true}\n                              variant='outlined'\n                              className={styles.total}\n                              fullWidth\n                              id={`items.${index}.total`}\n                              name={`items[${index}].total`}\n                              value={\n                                formik.values.items[index].price *\n                                formik.values.items[index].quantity\n                              }\n                              style={{ border: '1px solid transparent' }}\n                              onChange={formik.handleChange}\n                            />\n                          </Grid>\n\n                          {/* </Grid> */}\n                          <Grid\n                            item\n                            container\n                            className={styles.delete_btn}\n                            style={{\n                              alignItems: 'center',\n                              justifyContent: 'flex-end',\n                              marginTop: '1rem',\n                              paddingRight: '0',\n                            }}\n                            xs={2}\n                            md={1}>\n                            {/* <h4>&nbsp;</h4> */}\n                            <button onClick={() => arrayHelpers.remove(index)}>\n                              <DeleteIcon />\n                            </button>\n                          </Grid>\n                        </Grid>\n                      ))}\n                  </Grid>\n                  <Grid xs={12}>\n                    <button\n                      className={styles.add_new_item_btn}\n                      type='button'\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: '',\n                          quantity: '',\n                          price: '',\n                          total: '',\n                        })\n                      }>\n                      {/* show this when user has removed all friends from the list */}\n                      + Add New Item\n                    </button>\n                  </Grid>\n                </>\n              )}\n            />\n\n            <Grid xs={12} container style={{ margin: '1rem 0' }}>\n              <button\n                className={styles.cancel_btn}\n                onClick={() => resetAndCancel()}>\n                Discard\n              </button>\n              <button type='submit' className={styles.save_changes_btn}>\n                Save and Send\n              </button>\n            </Grid>\n          </Grid>\n        </Form>\n      </FormikProvider>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { InvoiceContext } from '../App';\nimport Media from 'react-media';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './InvoiceHeader.module.scss';\n\nexport default function InvoiceHeader() {\n  const {\n    setFilterInvoices,\n    invoices,\n    dayTheme,\n    setDayTheme,\n    displayNewInvoice,\n  } = useContext(InvoiceContext);\n  const [showDropDown, setToggleDropDown] = useState(false);\n  return (\n    <div className={styles.invoice_header_container}>\n      <div className={styles.no_of_invoices_container}>\n        <h2>Invoices</h2>\n        <div className={styles.body_2}>\n          <Media\n            query='(min-width: 768px)'\n            render={() => <span>There are </span>}\n          />\n          <span>{invoices.length} </span>\n          <Media query='(min-width: 768px)' render={() => <span>total</span>} />\n          <span> invoices</span>\n        </div>\n      </div>\n      <div className={styles.filter_container}>\n        <button\n          onClick={() =>\n            setToggleDropDown((prevToggleState) => !prevToggleState)\n          }>\n          <h4>\n            Filter\n            <Media\n              query='(min-width: 768px)'\n              render={() => <span> By Status</span>}\n            />\n          </h4>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/icon-arrow-down.svg`}\n            alt=''\n          />\n        </button>\n        <CSSTransition\n          in={showDropDown}\n          timeout={500}\n          classNames='alert'\n          unmountOnExit>\n          <div className={styles.drop_down_container}>\n            <label className='draft'>\n              <input\n                onChange={() => setFilterInvoices('draft')}\n                type='radio'\n                name='filter'\n              />\n              <h4>Draft</h4>\n            </label>\n            <label className='pending'>\n              <input\n                onChange={() => setFilterInvoices('pending')}\n                type='radio'\n                name='filter'\n              />\n              <h4>Pending</h4>\n            </label>\n            <label className='paid'>\n              <input\n                onChange={() => setFilterInvoices('paid')}\n                type='radio'\n                name='filter'\n              />\n              <h4>Paid</h4>\n            </label>\n            <label className='paid'>\n              <input\n                onChange={() => setFilterInvoices('none')}\n                type='radio'\n                name='filter'\n              />\n              <h4>All</h4>\n            </label>\n          </div>\n        </CSSTransition>\n      </div>\n      <button\n        onClick={() => displayNewInvoice()}\n        className={styles.new_invoice_btn}>\n        <div className={styles.button_circle}>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/icon-plus.svg`}\n            alt='new invoice'\n          />\n        </div>\n        <h4>New </h4>\n        <Media\n          query='(min-width: 768px)'\n          render={() => <h4>&nbsp; Invoice</h4>}\n        />\n      </button>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { InvoiceContext } from '../App';\n\nexport default function DeleteModal() {\n  const { deleteModal, setDeleteModal, deleteInvoice, selectedInvoice } =\n    useContext(InvoiceContext);\n\n  return (\n    <div className='delete_modal_flex_container'>\n      <div className='modal_container'>\n        <h2>Confirm deletion</h2>\n        <div className='body_1'>\n          Are you sure you want to delete{' '}\n          {selectedInvoice.length !== 0 && selectedInvoice[0].id}? This action\n          cannot be undone.\n        </div>\n        <h4 className='button_container'>\n          <div onClick={() => setDeleteModal(false)} className='cancel_btn'>\n            Cancel\n          </div>\n          <div\n            onClick={() => deleteInvoice()}\n            deleteInvoice\n            className='delete_btn'>\n            Delete\n          </div>\n        </h4>\n      </div>\n    </div>\n  );\n}\n","import './App.scss';\nimport React, { useEffect, useState, createContext } from 'react';\nimport invoicesData from './data.json';\nimport NavBar from './components/NavBar';\nimport InvoiceDetails from './components/InvoiceDetails';\nimport Invoices from './components/Invoices';\nimport EditInvoice from './components/EditInvoice';\nimport CreateInvoice from './components/CreateInvoice';\nimport InvoiceHeader from './components/InvoiceHeader';\nimport newInvoiceDefaultValues from './components/invoiceHelpers/newInvoiceDefaultValues';\nimport { CSSTransition } from 'react-transition-group';\nimport DeleteModal from './components/DeleteModal';\nexport const InvoiceContext = createContext();\n\nfunction App() {\n  const [dayTheme, setDayTheme] = useState(true);\n  const [invoices, setInvoices] = useState([]);\n  const [newInvoice, setNewInvoice] = useState([]);\n  const [showNewInvoice, setShowNewinvoice] = useState(false);\n  const [filter, setFilterInvoices] = useState('none');\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [selectedInvoice, setSelectedInvoice] = useState([]);\n  const [backgroundGreyedOut, setBackgroundGreyedOut] = useState(false);\n  const [showEditInvoice, setShowEditInvoice] = useState(false);\n  const [showInvoiceDetails, setShowInvoiceDetails] = useState(false);\n  const [showInvoices, setShowInvoices] = useState(true);\n\n  useEffect(() => {\n    setInvoices(invoicesData);\n    setFilterInvoices(invoicesData);\n  }, []);\n\n  const markAsPaid = (id) => {\n    let updatedSelectedInvoice = null;\n    let updatedInvoices = invoices.map((invoice) => {\n      if (invoice.id === id) {\n        updatedSelectedInvoice = { ...invoice, status: 'paid' };\n        return { ...invoice, status: 'paid' };\n      } else {\n        return invoice;\n      }\n    });\n    setInvoices(updatedInvoices);\n    setSelectedInvoice([updatedSelectedInvoice]);\n  };\n\n  const deleteInvoice = () => {\n    console.log(selectedInvoice[0].id);\n    const newInvoices = invoices.filter(\n      (invoice) => invoice.id !== selectedInvoice[0].id\n    );\n    setInvoices(newInvoices);\n    setDeleteModal(false);\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const cancel = () => {\n    setShowEditInvoice(false);\n    setShowNewinvoice(false);\n    setBackgroundGreyedOut(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n\n    /* return the user to the top of the screen */\n  };\n\n  const showDeleteModal = () => {\n    setDeleteModal(true);\n  };\n\n  const goBack = () => {\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowEditInvoice(true);\n    }, 500);\n  };\n\n  const goBackDetails = () => {\n    setShowInvoiceDetails(false);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const goBackEditOrCreate = () => {\n    setShowNewinvoice(false);\n    setShowEditInvoice(false);\n  };\n\n  const addNewInvoiceToState = (invoice) => {\n    setInvoices(invoices.concat(invoice));\n    setBackgroundGreyedOut(false);\n    setShowNewinvoice(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const displayNewInvoice = () => {\n    let defaultValues = newInvoiceDefaultValues();\n    setBackgroundGreyedOut(true);\n    setNewInvoice(defaultValues);\n    setShowNewinvoice(true);\n  };\n\n  const invoiceToUpdate = (updatedInvoice) => {\n    console.log(updatedInvoice.id);\n    setShowInvoices(false);\n    setInvoices(invoices.filter((invoice) => invoice.id !== updatedInvoice.id));\n    setInvoices((prevInvoices) => prevInvoices.concat(updatedInvoice));\n    setShowEditInvoice(false);\n    setBackgroundGreyedOut(false);\n    setShowInvoiceDetails(false);\n    window.scrollTo(0, 0);\n    setTimeout(() => {\n      setShowInvoices(true);\n    }, 500);\n  };\n\n  const editInvoice = () => {\n    setBackgroundGreyedOut(true);\n    setShowEditInvoice(true);\n  };\n\n  const chosenInvoice = (id) => {\n    setFilterInvoices('none');\n    console.log(id);\n    const selectedInvoice = invoices.filter((invoice) => invoice.id === id);\n    setSelectedInvoice(selectedInvoice);\n    setShowInvoices(false);\n    setTimeout(() => {\n      setShowInvoiceDetails(true);\n    }, 500);\n  };\n\n  return (\n    <div className='App'>\n      <InvoiceContext.Provider\n        value={{\n          invoices,\n          dayTheme,\n          chosenInvoice,\n          selectedInvoice,\n          setFilterInvoices,\n          setDayTheme,\n          displayNewInvoice,\n          markAsPaid,\n          setDeleteModal,\n          addNewInvoiceToState,\n          invoiceToUpdate,\n          cancel,\n          showDeleteModal,\n          deleteInvoice,\n          editInvoice,\n          newInvoice,\n          deleteModal,\n          setBackgroundGreyedOut,\n          goBackDetails,\n          goBackEditOrCreate,\n          goBack,\n          showInvoices,\n          showInvoiceDetails,\n        }}>\n        <CSSTransition\n          in={deleteModal}\n          timeout={500}\n          classNames='invoices-move'\n          unmountOnExit>\n          <DeleteModal />\n        </CSSTransition>\n\n        <div className='main-invoice-container'>\n          <NavBar />\n\n          <CSSTransition\n            in={showInvoices}\n            timeout={500}\n            classNames='invoices-move'\n            unmountOnExit>\n            <InvoiceHeader />\n          </CSSTransition>\n\n          {invoices.length === 0 ? (\n            <div className='no-invoice-image'>\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/illustration-empty.svg`}\n                alt='no invoices'\n              />\n            </div>\n          ) : (\n            <Invoices filter={filter} />\n          )}\n\n          <CSSTransition\n            in={showInvoiceDetails}\n            timeout={500}\n            classNames='invoicesDetails-move'\n            unmountOnExit>\n            <InvoiceDetails />\n          </CSSTransition>\n        </div>\n\n        <CSSTransition\n          in={backgroundGreyedOut}\n          timeout={500}\n          classNames='invoices-move'\n          unmountOnExit>\n          <div className='greyed_out_background'></div>\n        </CSSTransition>\n\n        <CSSTransition\n          in={showNewInvoice}\n          timeout={500}\n          classNames='invoicesDetails-move'\n          unmountOnExit>\n          <CreateInvoice />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showEditInvoice}\n          timeout={500}\n          classNames='invoicesDetails-move'\n          unmountOnExit>\n          <EditInvoice />\n        </CSSTransition>\n      </InvoiceContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"InvoiceHeader_body_1__1fKC6\",\"body_2\":\"InvoiceHeader_body_2__r8-7Y\",\"App\":\"InvoiceHeader_App__3qqQH\",\"greyed_out_background\":\"InvoiceHeader_greyed_out_background__28Le5\",\"main-invoice-container\":\"InvoiceHeader_main-invoice-container__2bzna\",\"no-invoice-image\":\"InvoiceHeader_no-invoice-image__3pvWZ\",\"delete_modal_flex_container\":\"InvoiceHeader_delete_modal_flex_container__2AF1Y\",\"modal_container\":\"InvoiceHeader_modal_container__2VKL9\",\"button_container\":\"InvoiceHeader_button_container__22VOl\",\"cancel_btn\":\"InvoiceHeader_cancel_btn__2cQc7\",\"delete_btn\":\"InvoiceHeader_delete_btn__3eTQZ\",\"alert-enter\":\"InvoiceHeader_alert-enter__3A6HE\",\"alert-enter-active\":\"InvoiceHeader_alert-enter-active__2Ngoo\",\"alert-exit\":\"InvoiceHeader_alert-exit__rZnCf\",\"alert-exit-active\":\"InvoiceHeader_alert-exit-active__lvPkV\",\"invoices-move-enter\":\"InvoiceHeader_invoices-move-enter__1fHbf\",\"invoices-move-enter-active\":\"InvoiceHeader_invoices-move-enter-active__z0C14\",\"invoices-move-exit\":\"InvoiceHeader_invoices-move-exit__3KZOi\",\"invoices-move-exit-active\":\"InvoiceHeader_invoices-move-exit-active__3GfxL\",\"invoicesDetails-move-enter\":\"InvoiceHeader_invoicesDetails-move-enter__2g1ga\",\"invoicesDetails-move-enter-active\":\"InvoiceHeader_invoicesDetails-move-enter-active__3NLJs\",\"invoicesDetails-move-exit\":\"InvoiceHeader_invoicesDetails-move-exit__2xWa5\",\"invoicesDetails-move-exit-active\":\"InvoiceHeader_invoicesDetails-move-exit-active__2qJC9\",\"invoice_header_container\":\"InvoiceHeader_invoice_header_container__M1m3L\",\"no_of_invoices_container\":\"InvoiceHeader_no_of_invoices_container__ckGY0\",\"filter_container\":\"InvoiceHeader_filter_container__21bUg\",\"drop_down_container\":\"InvoiceHeader_drop_down_container__3Zeyw\",\"new_invoice_btn\":\"InvoiceHeader_new_invoice_btn__1h8zC\",\"button_circle\":\"InvoiceHeader_button_circle__Wd94d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"NavBar_body_1__K-CSI\",\"body_2\":\"NavBar_body_2__18ksk\",\"App\":\"NavBar_App__12WZU\",\"greyed_out_background\":\"NavBar_greyed_out_background__2C1z8\",\"main-invoice-container\":\"NavBar_main-invoice-container__1IAmU\",\"no-invoice-image\":\"NavBar_no-invoice-image__37VT-\",\"delete_modal_flex_container\":\"NavBar_delete_modal_flex_container__9uZwx\",\"modal_container\":\"NavBar_modal_container__1VNIF\",\"button_container\":\"NavBar_button_container__2cUIG\",\"cancel_btn\":\"NavBar_cancel_btn__beb9U\",\"delete_btn\":\"NavBar_delete_btn__PcmB7\",\"alert-enter\":\"NavBar_alert-enter__3hCJ0\",\"alert-enter-active\":\"NavBar_alert-enter-active__s6BCG\",\"alert-exit\":\"NavBar_alert-exit__8_FW1\",\"alert-exit-active\":\"NavBar_alert-exit-active__drVdE\",\"invoices-move-enter\":\"NavBar_invoices-move-enter__1ZZs6\",\"invoices-move-enter-active\":\"NavBar_invoices-move-enter-active__1uJlo\",\"invoices-move-exit\":\"NavBar_invoices-move-exit__BJfyQ\",\"invoices-move-exit-active\":\"NavBar_invoices-move-exit-active__1bEqV\",\"invoicesDetails-move-enter\":\"NavBar_invoicesDetails-move-enter__1YWI9\",\"invoicesDetails-move-enter-active\":\"NavBar_invoicesDetails-move-enter-active__1RvvH\",\"invoicesDetails-move-exit\":\"NavBar_invoicesDetails-move-exit__PZc_v\",\"invoicesDetails-move-exit-active\":\"NavBar_invoicesDetails-move-exit-active__1VTOC\",\"navbar_flex_container\":\"NavBar_navbar_flex_container__3PCLN\",\"logo_container\":\"NavBar_logo_container__3Sbm4\",\"nested_purple_pattern\":\"NavBar_nested_purple_pattern__qHbha\",\"day_or_night_btn\":\"NavBar_day_or_night_btn__3NlCP\",\"avatar_container\":\"NavBar_avatar_container__3Mn-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_1\":\"InvoiceDetails_body_1__1rPp9\",\"body_2\":\"InvoiceDetails_body_2__2SMEO\",\"App\":\"InvoiceDetails_App__3_uIM\",\"greyed_out_background\":\"InvoiceDetails_greyed_out_background__27ZqJ\",\"main-invoice-container\":\"InvoiceDetails_main-invoice-container__1zujl\",\"no-invoice-image\":\"InvoiceDetails_no-invoice-image__2Rbil\",\"delete_modal_flex_container\":\"InvoiceDetails_delete_modal_flex_container__AiWJN\",\"modal_container\":\"InvoiceDetails_modal_container__1ku3T\",\"button_container\":\"InvoiceDetails_button_container__5_Asl\",\"cancel_btn\":\"InvoiceDetails_cancel_btn__B2dvO\",\"delete_btn\":\"InvoiceDetails_delete_btn__2Xuob\",\"alert-enter\":\"InvoiceDetails_alert-enter__OZwkJ\",\"alert-enter-active\":\"InvoiceDetails_alert-enter-active__1heoA\",\"alert-exit\":\"InvoiceDetails_alert-exit__1u0-z\",\"alert-exit-active\":\"InvoiceDetails_alert-exit-active__2LIVV\",\"invoices-move-enter\":\"InvoiceDetails_invoices-move-enter__2-2ps\",\"invoices-move-enter-active\":\"InvoiceDetails_invoices-move-enter-active__Sz9GR\",\"invoices-move-exit\":\"InvoiceDetails_invoices-move-exit__39HeZ\",\"invoices-move-exit-active\":\"InvoiceDetails_invoices-move-exit-active__cUplE\",\"invoicesDetails-move-enter\":\"InvoiceDetails_invoicesDetails-move-enter__OUZIX\",\"invoicesDetails-move-enter-active\":\"InvoiceDetails_invoicesDetails-move-enter-active__1A65c\",\"invoicesDetails-move-exit\":\"InvoiceDetails_invoicesDetails-move-exit__2Pd1p\",\"invoicesDetails-move-exit-active\":\"InvoiceDetails_invoicesDetails-move-exit-active__t5_9v\",\"invoice_details_container\":\"InvoiceDetails_invoice_details_container__i0-97\",\"go_back_section\":\"InvoiceDetails_go_back_section__NXlkw\",\"status_and_button\":\"InvoiceDetails_status_and_button__2cJpe\",\"pending_btn\":\"InvoiceDetails_pending_btn__2Vzbl\",\"circle_container\":\"InvoiceDetails_circle_container__3vnNN\",\"paid_btn\":\"InvoiceDetails_paid_btn__3K23W\",\"draft_btn\":\"InvoiceDetails_draft_btn__3wBEY\",\"edit_button\":\"InvoiceDetails_edit_button__22Ax4\",\"delete_button\":\"InvoiceDetails_delete_button__1wmoe\",\"paid_button\":\"InvoiceDetails_paid_button__3oNvv\",\"main_info_flex_container\":\"InvoiceDetails_main_info_flex_container__BgoIU\",\"id_container\":\"InvoiceDetails_id_container__t_a-e\",\"address\":\"InvoiceDetails_address__1MkdL\",\"payment_dates\":\"InvoiceDetails_payment_dates__1sZEJ\",\"payment\":\"InvoiceDetails_payment__2WnLm\",\"email\":\"InvoiceDetails_email__BycYZ\",\"sub_total_and_total_container\":\"InvoiceDetails_sub_total_and_total_container__1JLRY\",\"titles_container\":\"InvoiceDetails_titles_container__3wjx2\",\"item\":\"InvoiceDetails_item__3tAjy\",\"qty\":\"InvoiceDetails_qty__1RQoA\",\"price\":\"InvoiceDetails_price__1ljeq\",\"total\":\"InvoiceDetails_total__20QJ3\",\"invoice_item\":\"InvoiceDetails_invoice_item__3jyLl\",\"invoice_quantity\":\"InvoiceDetails_invoice_quantity__jCK4D\",\"invoice_name\":\"InvoiceDetails_invoice_name__3tw1Z\",\"invoice_price\":\"InvoiceDetails_invoice_price__3-_WV\",\"grand_total\":\"InvoiceDetails_grand_total__s6T5r\",\"fixed_buttons\":\"InvoiceDetails_fixed_buttons__3tq09\",\"invoice_address\":\"InvoiceDetails_invoice_address__3gvjk\",\"invoice_unit_price\":\"InvoiceDetails_invoice_unit_price__2gC-e\"};"],"sourceRoot":""}